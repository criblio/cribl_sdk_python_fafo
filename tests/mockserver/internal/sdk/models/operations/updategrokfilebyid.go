// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type UpdateGrokFileByIDRequest struct {
	// Unique ID to PATCH
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// GrokFile object to be updated
	GrokFile components.GrokFile `request:"mediaType=application/json"`
}

func (o *UpdateGrokFileByIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *UpdateGrokFileByIDRequest) GetGrokFile() components.GrokFile {
	if o == nil {
		return components.GrokFile{}
	}
	return o.GrokFile
}

// UpdateGrokFileByIDResponseBody - a list of GrokFile objects
type UpdateGrokFileByIDResponseBody struct {
	// number of items present in the items array
	Count *int64                `json:"count,omitempty"`
	Items []components.GrokFile `json:"items,omitempty"`
}

func (o *UpdateGrokFileByIDResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *UpdateGrokFileByIDResponseBody) GetItems() []components.GrokFile {
	if o == nil {
		return nil
	}
	return o.Items
}

type UpdateGrokFileByIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of GrokFile objects
	Object *UpdateGrokFileByIDResponseBody
}

func (o *UpdateGrokFileByIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UpdateGrokFileByIDResponse) GetObject() *UpdateGrokFileByIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
