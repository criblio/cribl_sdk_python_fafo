"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .captureparams import CaptureParams, CaptureParamsTypedDict
from cribl_sdk_python_fafo.types import BaseModel
from cribl_sdk_python_fafo.utils import (
    FieldMetadata,
    PathParamMetadata,
    RequestMetadata,
)
import pydantic
from typing import Any, Dict, List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class CreateSystemProjectsCaptureByProjectIDRequestTypedDict(TypedDict):
    project_id: str
    r"""Project ID"""
    capture_params: CaptureParamsTypedDict
    r"""CaptureParams object"""


class CreateSystemProjectsCaptureByProjectIDRequest(BaseModel):
    project_id: Annotated[
        str,
        pydantic.Field(alias="projectId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Project ID"""

    capture_params: Annotated[
        CaptureParams,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]
    r"""CaptureParams object"""


class CreateSystemProjectsCaptureByProjectIDResponseTypedDict(TypedDict):
    r"""a list of any objects"""

    count: NotRequired[int]
    r"""number of items present in the items array"""
    items: NotRequired[List[Dict[str, Any]]]


class CreateSystemProjectsCaptureByProjectIDResponse(BaseModel):
    r"""a list of any objects"""

    count: Optional[int] = None
    r"""number of items present in the items array"""

    items: Optional[List[Dict[str, Any]]] = None
