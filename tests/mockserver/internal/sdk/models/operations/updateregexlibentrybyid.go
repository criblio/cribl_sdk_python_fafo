// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type UpdateRegexLibEntryByIDRequest struct {
	// Unique ID to PATCH
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// RegexLibEntry object to be updated
	RegexLibEntry components.RegexLibEntry `request:"mediaType=application/json"`
}

func (o *UpdateRegexLibEntryByIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *UpdateRegexLibEntryByIDRequest) GetRegexLibEntry() components.RegexLibEntry {
	if o == nil {
		return components.RegexLibEntry{}
	}
	return o.RegexLibEntry
}

// UpdateRegexLibEntryByIDResponseBody - a list of RegexLibEntry objects
type UpdateRegexLibEntryByIDResponseBody struct {
	// number of items present in the items array
	Count *int64                     `json:"count,omitempty"`
	Items []components.RegexLibEntry `json:"items,omitempty"`
}

func (o *UpdateRegexLibEntryByIDResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *UpdateRegexLibEntryByIDResponseBody) GetItems() []components.RegexLibEntry {
	if o == nil {
		return nil
	}
	return o.Items
}

type UpdateRegexLibEntryByIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of RegexLibEntry objects
	Object *UpdateRegexLibEntryByIDResponseBody
}

func (o *UpdateRegexLibEntryByIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UpdateRegexLibEntryByIDResponse) GetObject() *UpdateRegexLibEntryByIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
