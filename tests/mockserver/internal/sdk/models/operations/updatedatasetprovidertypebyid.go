// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type UpdateDatasetProviderTypeByIDRequest struct {
	// Unique ID to PATCH
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// DatasetProviderType object to be updated
	DatasetProviderType components.DatasetProviderType `request:"mediaType=application/json"`
}

func (o *UpdateDatasetProviderTypeByIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *UpdateDatasetProviderTypeByIDRequest) GetDatasetProviderType() components.DatasetProviderType {
	if o == nil {
		return components.DatasetProviderType{}
	}
	return o.DatasetProviderType
}

// UpdateDatasetProviderTypeByIDResponseBody - a list of DatasetProviderType objects
type UpdateDatasetProviderTypeByIDResponseBody struct {
	// number of items present in the items array
	Count *int64                           `json:"count,omitempty"`
	Items []components.DatasetProviderType `json:"items,omitempty"`
}

func (o *UpdateDatasetProviderTypeByIDResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *UpdateDatasetProviderTypeByIDResponseBody) GetItems() []components.DatasetProviderType {
	if o == nil {
		return nil
	}
	return o.Items
}

type UpdateDatasetProviderTypeByIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of DatasetProviderType objects
	Object *UpdateDatasetProviderTypeByIDResponseBody
}

func (o *UpdateDatasetProviderTypeByIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UpdateDatasetProviderTypeByIDResponse) GetObject() *UpdateDatasetProviderTypeByIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
