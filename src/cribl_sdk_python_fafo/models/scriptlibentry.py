"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from cribl_sdk_python_fafo.types import BaseModel
import pydantic
from pydantic import ConfigDict
from typing import Any, Dict, List, Optional
from typing_extensions import NotRequired, TypedDict


class ScriptLibEntryTypedDict(TypedDict):
    id: str
    command: str
    r"""Command to execute for this script"""
    description: NotRequired[str]
    args: NotRequired[List[str]]
    r"""Arguments to pass when executing this script"""
    env: NotRequired[Dict[str, str]]
    r"""Extra environment variables to set when executing script"""


class ScriptLibEntry(BaseModel):
    model_config = ConfigDict(
        populate_by_name=True, arbitrary_types_allowed=True, extra="allow"
    )
    __pydantic_extra__: Dict[str, Any] = pydantic.Field(init=False)

    id: str

    command: str
    r"""Command to execute for this script"""

    description: Optional[str] = None

    args: Optional[List[str]] = None
    r"""Arguments to pass when executing this script"""

    env: Optional[Dict[str, str]] = None
    r"""Extra environment variables to set when executing script"""

    @property
    def additional_properties(self):
        return self.__pydantic_extra__

    @additional_properties.setter
    def additional_properties(self, value):
        self.__pydantic_extra__ = value  # pyright: ignore[reportIncompatibleVariableOverride]
