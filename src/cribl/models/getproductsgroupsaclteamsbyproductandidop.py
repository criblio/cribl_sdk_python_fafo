"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .teamaccesscontrollist import TeamAccessControlList, TeamAccessControlListTypedDict
from cribl.types import BaseModel
from cribl.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
from enum import Enum
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetProductsGroupsACLTeamsByProductAndIDPathParamProduct(str, Enum):
    r"""Cribl Product"""

    STREAM = "stream"
    EDGE = "edge"


class GetProductsGroupsACLTeamsByProductAndIDQueryParamType(str, Enum):
    r"""resource type by which to filter access levels"""

    GROUPS = "groups"
    DATASETS = "datasets"
    DATASET_PROVIDERS = "dataset-providers"
    PROJECTS = "projects"
    DASHBOARDS = "dashboards"
    MACROS = "macros"


class GetProductsGroupsACLTeamsByProductAndIDRequestTypedDict(TypedDict):
    product: GetProductsGroupsACLTeamsByProductAndIDPathParamProduct
    r"""Cribl Product"""
    id: str
    r"""Group ID"""
    type: NotRequired[GetProductsGroupsACLTeamsByProductAndIDQueryParamType]
    r"""resource type by which to filter access levels"""


class GetProductsGroupsACLTeamsByProductAndIDRequest(BaseModel):
    product: Annotated[
        GetProductsGroupsACLTeamsByProductAndIDPathParamProduct,
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Cribl Product"""

    id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Group ID"""

    type: Annotated[
        Optional[GetProductsGroupsACLTeamsByProductAndIDQueryParamType],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""resource type by which to filter access levels"""


class GetProductsGroupsACLTeamsByProductAndIDResponseBodyTypedDict(TypedDict):
    r"""a list of TeamAccessControlList objects"""

    count: NotRequired[int]
    r"""number of items present in the items array"""
    items: NotRequired[List[TeamAccessControlListTypedDict]]


class GetProductsGroupsACLTeamsByProductAndIDResponseBody(BaseModel):
    r"""a list of TeamAccessControlList objects"""

    count: Optional[int] = None
    r"""number of items present in the items array"""

    items: Optional[List[TeamAccessControlList]] = None
