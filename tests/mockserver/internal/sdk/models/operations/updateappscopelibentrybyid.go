// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type UpdateAppscopeLibEntryByIDRequest struct {
	// Unique ID to PATCH
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// AppscopeLibEntry object to be updated
	AppscopeLibEntry components.AppscopeLibEntry `request:"mediaType=application/json"`
}

func (o *UpdateAppscopeLibEntryByIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *UpdateAppscopeLibEntryByIDRequest) GetAppscopeLibEntry() components.AppscopeLibEntry {
	if o == nil {
		return components.AppscopeLibEntry{}
	}
	return o.AppscopeLibEntry
}

// UpdateAppscopeLibEntryByIDResponseBody - a list of AppscopeLibEntry objects
type UpdateAppscopeLibEntryByIDResponseBody struct {
	// number of items present in the items array
	Count *int64                        `json:"count,omitempty"`
	Items []components.AppscopeLibEntry `json:"items,omitempty"`
}

func (o *UpdateAppscopeLibEntryByIDResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *UpdateAppscopeLibEntryByIDResponseBody) GetItems() []components.AppscopeLibEntry {
	if o == nil {
		return nil
	}
	return o.Items
}

type UpdateAppscopeLibEntryByIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of AppscopeLibEntry objects
	Object *UpdateAppscopeLibEntryByIDResponseBody
}

func (o *UpdateAppscopeLibEntryByIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UpdateAppscopeLibEntryByIDResponse) GetObject() *UpdateAppscopeLibEntryByIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
