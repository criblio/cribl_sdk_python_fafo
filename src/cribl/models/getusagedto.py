"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .usagedata import UsageData, UsageDataTypedDict
from cribl.types import BaseModel
import pydantic
from typing import Dict, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetUsageDTOTypedDict(TypedDict):
    starting_on: str
    ending_before: str
    data: UsageDataTypedDict
    grouped_data: NotRequired[Dict[str, UsageDataTypedDict]]


class GetUsageDTO(BaseModel):
    starting_on: Annotated[str, pydantic.Field(alias="startingOn")]

    ending_before: Annotated[str, pydantic.Field(alias="endingBefore")]

    data: UsageData

    grouped_data: Annotated[
        Optional[Dict[str, UsageData]], pydantic.Field(alias="groupedData")
    ] = None
