// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type GetEdgeLogsRequest struct {
	// Discovery Mode (default is "auto")
	Mode *string `queryParam:"style=form,explode=true,name=mode"`
	// query array[string] optional List of allowed-filename wildcard patterns
	Allow *string `queryParam:"style=form,explode=true,name=allow"`
	// Search directory for "manual" mode
	Path *string `queryParam:"style=form,explode=true,name=path"`
	// Search depth for "manual" mode
	Depth *float64 `queryParam:"style=form,explode=true,name=depth"`
}

func (o *GetEdgeLogsRequest) GetMode() *string {
	if o == nil {
		return nil
	}
	return o.Mode
}

func (o *GetEdgeLogsRequest) GetAllow() *string {
	if o == nil {
		return nil
	}
	return o.Allow
}

func (o *GetEdgeLogsRequest) GetPath() *string {
	if o == nil {
		return nil
	}
	return o.Path
}

func (o *GetEdgeLogsRequest) GetDepth() *float64 {
	if o == nil {
		return nil
	}
	return o.Depth
}

// GetEdgeLogsResponseBody - a list of EdgeFile objects
type GetEdgeLogsResponseBody struct {
	// number of items present in the items array
	Count *int64                `json:"count,omitempty"`
	Items []components.EdgeFile `json:"items,omitempty"`
}

func (o *GetEdgeLogsResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *GetEdgeLogsResponseBody) GetItems() []components.EdgeFile {
	if o == nil {
		return nil
	}
	return o.Items
}

type GetEdgeLogsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of EdgeFile objects
	Object *GetEdgeLogsResponseBody
}

func (o *GetEdgeLogsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetEdgeLogsResponse) GetObject() *GetEdgeLogsResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
