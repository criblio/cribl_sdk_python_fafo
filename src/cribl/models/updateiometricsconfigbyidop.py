"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .iometricsconfig import IoMetricsConfig, IoMetricsConfigTypedDict
from cribl.types import BaseModel
from cribl.utils import FieldMetadata, PathParamMetadata, RequestMetadata
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class UpdateIoMetricsConfigByIDRequestTypedDict(TypedDict):
    id_param: str
    r"""Unique ID to PATCH"""
    io_metrics_config: IoMetricsConfigTypedDict
    r"""IoMetricsConfig object to be updated"""


class UpdateIoMetricsConfigByIDRequest(BaseModel):
    id_param: Annotated[
        str,
        pydantic.Field(alias="id"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Unique ID to PATCH"""

    io_metrics_config: Annotated[
        IoMetricsConfig,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]
    r"""IoMetricsConfig object to be updated"""


class UpdateIoMetricsConfigByIDResponseBodyTypedDict(TypedDict):
    r"""a list of IoMetricsConfig objects"""

    count: NotRequired[int]
    r"""number of items present in the items array"""
    items: NotRequired[List[IoMetricsConfigTypedDict]]


class UpdateIoMetricsConfigByIDResponseBody(BaseModel):
    r"""a list of IoMetricsConfig objects"""

    count: Optional[int] = None
    r"""number of items present in the items array"""

    items: Optional[List[IoMetricsConfig]] = None
