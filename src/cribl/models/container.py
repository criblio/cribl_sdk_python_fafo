"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .containerdinfo import ContainerdInfo, ContainerdInfoTypedDict
from .containerport import ContainerPort, ContainerPortTypedDict
from .dockerinfo import DockerInfo, DockerInfoTypedDict
from cribl.types import BaseModel
from enum import Enum
from typing import List, Optional, Union
from typing_extensions import NotRequired, TypeAliasType, TypedDict


CommandTypedDict = TypeAliasType("CommandTypedDict", Union[str, List[str]])


Command = TypeAliasType("Command", Union[str, List[str]])


class ContainerType(str, Enum):
    DOCKER = "docker"
    CONTAINERD = "containerd"


class ContainerTypedDict(TypedDict):
    command: CommandTypedDict
    created: float
    id: str
    image: str
    name: str
    status: str
    type: ContainerType
    containerd: NotRequired[ContainerdInfoTypedDict]
    docker: NotRequired[DockerInfoTypedDict]
    ips: NotRequired[List[str]]
    ports: NotRequired[List[ContainerPortTypedDict]]


class Container(BaseModel):
    command: Command

    created: float

    id: str

    image: str

    name: str

    status: str

    type: ContainerType

    containerd: Optional[ContainerdInfo] = None

    docker: Optional[DockerInfo] = None

    ips: Optional[List[str]] = None

    ports: Optional[List[ContainerPort]] = None
