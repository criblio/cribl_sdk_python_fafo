"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from cribl_sdk_python_fafo.types import BaseModel
from enum import Enum
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class EncryptionAlgorithm(str, Enum):
    AES_256_CBC = "aes-256-cbc"
    AES_256_GCM = "aes-256-gcm"


class KMSForThisKey(str, Enum):
    LOCAL = "local"


class InitializationVectorSize(int, Enum):
    r"""Length of the initialization vector, in bytes"""

    TWELVE = 12
    THIRTEEN = 13
    FOURTEEN = 14
    FIFTEEN = 15
    SIXTEEN = 16


class KeyMetadataEntityTypedDict(TypedDict):
    key_id: str
    description: NotRequired[str]
    algorithm: NotRequired[EncryptionAlgorithm]
    kms: NotRequired[KMSForThisKey]
    keyclass: NotRequired[float]
    created: NotRequired[float]
    expires: NotRequired[float]
    plain_key: NotRequired[str]
    cipher_key: NotRequired[str]
    use_iv: NotRequired[bool]
    r"""Seed encryption with a [nonce](https://en.wikipedia.org/wiki/Cryptographic_nonce) to make the key more random and unique. Must be enabled with the aes-256-gcm algorithm."""
    iv_size: NotRequired[InitializationVectorSize]
    r"""Length of the initialization vector, in bytes"""
    group: NotRequired[str]
    r"""Name of the Worker Group/Fleet that created this key"""


class KeyMetadataEntity(BaseModel):
    key_id: Annotated[str, pydantic.Field(alias="keyId")]

    description: Optional[str] = None

    algorithm: Optional[EncryptionAlgorithm] = EncryptionAlgorithm.AES_256_CBC

    kms: Optional[KMSForThisKey] = KMSForThisKey.LOCAL

    keyclass: Optional[float] = 0

    created: Optional[float] = None

    expires: Optional[float] = None

    plain_key: Annotated[Optional[str], pydantic.Field(alias="plainKey")] = None

    cipher_key: Annotated[Optional[str], pydantic.Field(alias="cipherKey")] = None

    use_iv: Annotated[Optional[bool], pydantic.Field(alias="useIV")] = False
    r"""Seed encryption with a [nonce](https://en.wikipedia.org/wiki/Cryptographic_nonce) to make the key more random and unique. Must be enabled with the aes-256-gcm algorithm."""

    iv_size: Annotated[
        Optional[InitializationVectorSize], pydantic.Field(alias="ivSize")
    ] = InitializationVectorSize.TWELVE
    r"""Length of the initialization vector, in bytes"""

    group: Optional[str] = None
    r"""Name of the Worker Group/Fleet that created this key"""
