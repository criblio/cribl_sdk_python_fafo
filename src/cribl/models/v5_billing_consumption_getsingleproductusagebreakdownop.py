"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .consumptionwindowv5 import ConsumptionWindowV5
from cribl.types import BaseModel
from cribl.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
from datetime import datetime
from enum import Enum
import pydantic
from typing_extensions import Annotated, TypedDict


class ProductSlug(str, Enum):
    STREAM = "stream"
    SEARCH = "search"
    EDGE = "edge"
    LAKEHOUSE = "lakehouse"
    LAKE = "lake"
    INFRASTRUCTURE = "infrastructure"
    OTHER = "other"


class V5BillingConsumptionGetSingleProductUsageBreakdownRequestTypedDict(TypedDict):
    organization_id: str
    product_slug: ProductSlug
    starting_on: datetime
    ending_before: datetime
    window: ConsumptionWindowV5


class V5BillingConsumptionGetSingleProductUsageBreakdownRequest(BaseModel):
    organization_id: Annotated[
        str,
        pydantic.Field(alias="organizationId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]

    product_slug: Annotated[
        ProductSlug,
        pydantic.Field(alias="productSlug"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]

    starting_on: Annotated[
        datetime,
        pydantic.Field(alias="startingOn"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ]

    ending_before: Annotated[
        datetime,
        pydantic.Field(alias="endingBefore"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ]

    window: Annotated[
        ConsumptionWindowV5,
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ]
