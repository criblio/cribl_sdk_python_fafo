"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from cribl.types import BaseModel
from enum import Enum
import pydantic
from typing import Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class DatatypePreviewInput2Type(str, Enum):
    RAW_DATA = "rawData"


class DatatypePreviewInput2TypedDict(TypedDict):
    raw_data: str
    type: DatatypePreviewInput2Type


class DatatypePreviewInput2(BaseModel):
    raw_data: Annotated[str, pydantic.Field(alias="rawData")]

    type: DatatypePreviewInput2Type


class DatatypePreviewInputType(str, Enum):
    DATASET = "dataset"


class DatatypePreviewInput1TypedDict(TypedDict):
    dataset: str
    type: DatatypePreviewInputType


class DatatypePreviewInput1(BaseModel):
    dataset: str

    type: DatatypePreviewInputType


DatatypePreviewInputTypedDict = TypeAliasType(
    "DatatypePreviewInputTypedDict",
    Union[DatatypePreviewInput1TypedDict, DatatypePreviewInput2TypedDict],
)


DatatypePreviewInput = TypeAliasType(
    "DatatypePreviewInput", Union[DatatypePreviewInput1, DatatypePreviewInput2]
)
