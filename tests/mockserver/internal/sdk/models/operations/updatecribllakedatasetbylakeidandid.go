// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type UpdateCriblLakeDatasetByLakeIDAndIDRequest struct {
	// lake id that contains the Datasets
	LakeID string `pathParam:"style=simple,explode=false,name=lakeId"`
	// dataset id to update
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// CriblLakeDataset object
	CriblLakeDataset components.CriblLakeDataset `request:"mediaType=application/json"`
}

func (o *UpdateCriblLakeDatasetByLakeIDAndIDRequest) GetLakeID() string {
	if o == nil {
		return ""
	}
	return o.LakeID
}

func (o *UpdateCriblLakeDatasetByLakeIDAndIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *UpdateCriblLakeDatasetByLakeIDAndIDRequest) GetCriblLakeDataset() components.CriblLakeDataset {
	if o == nil {
		return components.CriblLakeDataset{}
	}
	return o.CriblLakeDataset
}

// UpdateCriblLakeDatasetByLakeIDAndIDResponseBody - a list of CriblLakeDataset objects
type UpdateCriblLakeDatasetByLakeIDAndIDResponseBody struct {
	// number of items present in the items array
	Count *int64                        `json:"count,omitempty"`
	Items []components.CriblLakeDataset `json:"items,omitempty"`
}

func (o *UpdateCriblLakeDatasetByLakeIDAndIDResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *UpdateCriblLakeDatasetByLakeIDAndIDResponseBody) GetItems() []components.CriblLakeDataset {
	if o == nil {
		return nil
	}
	return o.Items
}

type UpdateCriblLakeDatasetByLakeIDAndIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of CriblLakeDataset objects
	Object *UpdateCriblLakeDatasetByLakeIDAndIDResponseBody
}

func (o *UpdateCriblLakeDatasetByLakeIDAndIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UpdateCriblLakeDatasetByLakeIDAndIDResponse) GetObject() *UpdateCriblLakeDatasetByLakeIDAndIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
