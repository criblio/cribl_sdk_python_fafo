"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .team import Team, TeamTypedDict
from cribl_sdk_python_fafo.types import BaseModel
from cribl_sdk_python_fafo.utils import FieldMetadata, QueryParamMetadata
from enum import Enum
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetTeamProduct(str, Enum):
    r"""filter teams by product"""

    STREAM = "stream"
    EDGE = "edge"
    SEARCH = "search"


class GetTeamRequestTypedDict(TypedDict):
    product: NotRequired[GetTeamProduct]
    r"""filter teams by product"""


class GetTeamRequest(BaseModel):
    product: Annotated[
        Optional[GetTeamProduct],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""filter teams by product"""


class GetTeamResponseTypedDict(TypedDict):
    r"""a list of Team objects"""

    count: NotRequired[int]
    r"""number of items present in the items array"""
    items: NotRequired[List[TeamTypedDict]]


class GetTeamResponse(BaseModel):
    r"""a list of Team objects"""

    count: Optional[int] = None
    r"""number of items present in the items array"""

    items: Optional[List[Team]] = None
