// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type GetSystemLogsByIDRequest struct {
	// Log ID
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Maximum number of log lines to retrieve starting from offset.
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// in the current log file to fetch the log events upto.
	EndOffset *int64 `queryParam:"style=form,explode=true,name=endOffset"`
	// Epoch timestamp of the earliest event (includes rolled files present on disk)
	Et *int64 `queryParam:"style=form,explode=true,name=et"`
	// Epoch timestamp of the latest event (includes rolled files present on disk)
	Lt *int64 `queryParam:"style=form,explode=true,name=lt"`
	// Filter
	Filter *string `queryParam:"style=form,explode=true,name=filter"`
}

func (o *GetSystemLogsByIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetSystemLogsByIDRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *GetSystemLogsByIDRequest) GetEndOffset() *int64 {
	if o == nil {
		return nil
	}
	return o.EndOffset
}

func (o *GetSystemLogsByIDRequest) GetEt() *int64 {
	if o == nil {
		return nil
	}
	return o.Et
}

func (o *GetSystemLogsByIDRequest) GetLt() *int64 {
	if o == nil {
		return nil
	}
	return o.Lt
}

func (o *GetSystemLogsByIDRequest) GetFilter() *string {
	if o == nil {
		return nil
	}
	return o.Filter
}

// GetSystemLogsByIDResponseBody - a list of any objects
type GetSystemLogsByIDResponseBody struct {
	// number of items present in the items array
	Count *int64           `json:"count,omitempty"`
	Items []map[string]any `json:"items,omitempty"`
}

func (o *GetSystemLogsByIDResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *GetSystemLogsByIDResponseBody) GetItems() []map[string]any {
	if o == nil {
		return nil
	}
	return o.Items
}

type GetSystemLogsByIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of any objects
	Object *GetSystemLogsByIDResponseBody
}

func (o *GetSystemLogsByIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetSystemLogsByIDResponse) GetObject() *GetSystemLogsByIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
