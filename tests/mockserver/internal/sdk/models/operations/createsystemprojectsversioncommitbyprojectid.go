// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type CreateSystemProjectsVersionCommitByProjectIDRequest struct {
	// Project Id
	ProjectID string `pathParam:"style=simple,explode=false,name=projectId"`
	// ProjectGitCommitParams object
	ProjectGitCommitParams components.ProjectGitCommitParams `request:"mediaType=application/json"`
}

func (o *CreateSystemProjectsVersionCommitByProjectIDRequest) GetProjectID() string {
	if o == nil {
		return ""
	}
	return o.ProjectID
}

func (o *CreateSystemProjectsVersionCommitByProjectIDRequest) GetProjectGitCommitParams() components.ProjectGitCommitParams {
	if o == nil {
		return components.ProjectGitCommitParams{}
	}
	return o.ProjectGitCommitParams
}

// CreateSystemProjectsVersionCommitByProjectIDResponseBody - a list of GitCommitSummary objects
type CreateSystemProjectsVersionCommitByProjectIDResponseBody struct {
	// number of items present in the items array
	Count *int64                        `json:"count,omitempty"`
	Items []components.GitCommitSummary `json:"items,omitempty"`
}

func (o *CreateSystemProjectsVersionCommitByProjectIDResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *CreateSystemProjectsVersionCommitByProjectIDResponseBody) GetItems() []components.GitCommitSummary {
	if o == nil {
		return nil
	}
	return o.Items
}

type CreateSystemProjectsVersionCommitByProjectIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of GitCommitSummary objects
	Object *CreateSystemProjectsVersionCommitByProjectIDResponseBody
}

func (o *CreateSystemProjectsVersionCommitByProjectIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateSystemProjectsVersionCommitByProjectIDResponse) GetObject() *CreateSystemProjectsVersionCommitByProjectIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
