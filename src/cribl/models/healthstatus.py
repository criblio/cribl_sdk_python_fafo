"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from cribl import utils
from cribl.types import BaseModel
from enum import Enum
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class HealthStatusRole(str, Enum):
    PRIMARY = "primary"
    STANDBY = "standby"


class HealthStatusStatus(str, Enum):
    HEALTHY = "healthy"
    SHUTTING_DOWN = "shutting down"
    STANDBY = "standby"


class HealthStatusTypedDict(TypedDict):
    status: HealthStatusStatus
    start_time: float
    role: NotRequired[HealthStatusRole]


class HealthStatus(BaseModel):
    status: HealthStatusStatus

    start_time: Annotated[float, pydantic.Field(alias="startTime")]

    role: Optional[HealthStatusRole] = None


class HealthStatusErrorData(BaseModel):
    status: HealthStatusStatus

    start_time: Annotated[float, pydantic.Field(alias="startTime")]

    role: Optional[HealthStatusRole] = None


class HealthStatusError(Exception):
    data: HealthStatusErrorData

    def __init__(self, data: HealthStatusErrorData):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(self.data, HealthStatusErrorData)
