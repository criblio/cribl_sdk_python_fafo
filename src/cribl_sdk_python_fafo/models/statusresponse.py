"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from cribl_sdk_python_fafo.types import BaseModel
from enum import Enum
import pydantic
from typing import Any, List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class StageDetailStatus(str, Enum):
    NEW = "new"
    FAILED = "failed"
    RUNNING = "running"
    COMPLETED = "completed"
    CANCELED = "canceled"
    QUEUED = "queued"


class StageDetailTypedDict(TypedDict):
    cache_status_by_dataset_id: Any
    stage_id: str
    status: StageDetailStatus


class StageDetail(BaseModel):
    cache_status_by_dataset_id: Annotated[
        Any, pydantic.Field(alias="cacheStatusByDatasetId")
    ]

    stage_id: Annotated[str, pydantic.Field(alias="stageId")]

    status: StageDetailStatus


class StatusResponseStatus(str, Enum):
    NEW = "new"
    FAILED = "failed"
    RUNNING = "running"
    COMPLETED = "completed"
    CANCELED = "canceled"
    QUEUED = "queued"


class StatusResponseTypedDict(TypedDict):
    status: StatusResponseStatus
    time_created: float
    bytes_in: NotRequired[float]
    bytes_skipped: NotRequired[float]
    events_found: NotRequired[float]
    events_in: NotRequired[float]
    events_skipped: NotRequired[float]
    objects_found: NotRequired[float]
    objects_searched: NotRequired[float]
    objects_skipped: NotRequired[float]
    stage_details: NotRequired[List[StageDetailTypedDict]]
    time_completed: NotRequired[float]
    time_now: NotRequired[float]
    time_started: NotRequired[float]


class StatusResponse(BaseModel):
    status: StatusResponseStatus

    time_created: Annotated[float, pydantic.Field(alias="timeCreated")]

    bytes_in: Annotated[Optional[float], pydantic.Field(alias="bytesIn")] = None

    bytes_skipped: Annotated[Optional[float], pydantic.Field(alias="bytesSkipped")] = (
        None
    )

    events_found: Annotated[Optional[float], pydantic.Field(alias="eventsFound")] = None

    events_in: Annotated[Optional[float], pydantic.Field(alias="eventsIn")] = None

    events_skipped: Annotated[
        Optional[float], pydantic.Field(alias="eventsSkipped")
    ] = None

    objects_found: Annotated[Optional[float], pydantic.Field(alias="objectsFound")] = (
        None
    )

    objects_searched: Annotated[
        Optional[float], pydantic.Field(alias="objectsSearched")
    ] = None

    objects_skipped: Annotated[
        Optional[float], pydantic.Field(alias="objectsSkipped")
    ] = None

    stage_details: Annotated[
        Optional[List[StageDetail]], pydantic.Field(alias="stageDetails")
    ] = None

    time_completed: Annotated[
        Optional[float], pydantic.Field(alias="timeCompleted")
    ] = None

    time_now: Annotated[Optional[float], pydantic.Field(alias="timeNow")] = None

    time_started: Annotated[Optional[float], pydantic.Field(alias="timeStarted")] = None
