// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type UpdateTeamByIDRequest struct {
	// Unique ID to PATCH
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Team object to be updated
	Team components.Team `request:"mediaType=application/json"`
}

func (o *UpdateTeamByIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *UpdateTeamByIDRequest) GetTeam() components.Team {
	if o == nil {
		return components.Team{}
	}
	return o.Team
}

// UpdateTeamByIDResponseBody - a list of Team objects
type UpdateTeamByIDResponseBody struct {
	// number of items present in the items array
	Count *int64            `json:"count,omitempty"`
	Items []components.Team `json:"items,omitempty"`
}

func (o *UpdateTeamByIDResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *UpdateTeamByIDResponseBody) GetItems() []components.Team {
	if o == nil {
		return nil
	}
	return o.Items
}

type UpdateTeamByIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of Team objects
	Object *UpdateTeamByIDResponseBody
}

func (o *UpdateTeamByIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UpdateTeamByIDResponse) GetObject() *UpdateTeamByIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
