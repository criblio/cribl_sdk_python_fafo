// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type GetSystemProjectsVersionCountByProjectIDRequest struct {
	// Project ID
	ProjectID string `pathParam:"style=simple,explode=false,name=projectId"`
	// Commit ID
	ID *string `queryParam:"style=form,explode=true,name=ID"`
}

func (o *GetSystemProjectsVersionCountByProjectIDRequest) GetProjectID() string {
	if o == nil {
		return ""
	}
	return o.ProjectID
}

func (o *GetSystemProjectsVersionCountByProjectIDRequest) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

// GetSystemProjectsVersionCountByProjectIDResponseBody - a list of any objects
type GetSystemProjectsVersionCountByProjectIDResponseBody struct {
	// number of items present in the items array
	Count *int64           `json:"count,omitempty"`
	Items []map[string]any `json:"items,omitempty"`
}

func (o *GetSystemProjectsVersionCountByProjectIDResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *GetSystemProjectsVersionCountByProjectIDResponseBody) GetItems() []map[string]any {
	if o == nil {
		return nil
	}
	return o.Items
}

type GetSystemProjectsVersionCountByProjectIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of any objects
	Object *GetSystemProjectsVersionCountByProjectIDResponseBody
}

func (o *GetSystemProjectsVersionCountByProjectIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetSystemProjectsVersionCountByProjectIDResponse) GetObject() *GetSystemProjectsVersionCountByProjectIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
