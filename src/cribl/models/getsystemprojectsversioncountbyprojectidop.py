"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from cribl.types import BaseModel
from cribl.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
import pydantic
from typing import Any, Dict, List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetSystemProjectsVersionCountByProjectIDRequestTypedDict(TypedDict):
    project_id: str
    r"""Project ID"""
    id: NotRequired[str]
    r"""Commit ID"""


class GetSystemProjectsVersionCountByProjectIDRequest(BaseModel):
    project_id: Annotated[
        str,
        pydantic.Field(alias="projectId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Project ID"""

    id: Annotated[
        Optional[str],
        pydantic.Field(alias="ID"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Commit ID"""


class GetSystemProjectsVersionCountByProjectIDResponseBodyTypedDict(TypedDict):
    r"""a list of any objects"""

    count: NotRequired[int]
    r"""number of items present in the items array"""
    items: NotRequired[List[Dict[str, Any]]]


class GetSystemProjectsVersionCountByProjectIDResponseBody(BaseModel):
    r"""a list of any objects"""

    count: Optional[int] = None
    r"""number of items present in the items array"""

    items: Optional[List[Dict[str, Any]]] = None
