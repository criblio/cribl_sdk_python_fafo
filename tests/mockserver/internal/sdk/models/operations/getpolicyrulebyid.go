// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type GetPolicyRuleByIDRequest struct {
	// Unique ID to GET
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

func (o *GetPolicyRuleByIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

// GetPolicyRuleByIDResponseBody - a list of PolicyRule objects
type GetPolicyRuleByIDResponseBody struct {
	// number of items present in the items array
	Count *int64                  `json:"count,omitempty"`
	Items []components.PolicyRule `json:"items,omitempty"`
}

func (o *GetPolicyRuleByIDResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *GetPolicyRuleByIDResponseBody) GetItems() []components.PolicyRule {
	if o == nil {
		return nil
	}
	return o.Items
}

type GetPolicyRuleByIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of PolicyRule objects
	Object *GetPolicyRuleByIDResponseBody
}

func (o *GetPolicyRuleByIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetPolicyRuleByIDResponse) GetObject() *GetPolicyRuleByIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
