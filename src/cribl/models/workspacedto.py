"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from cribl.types import BaseModel
from datetime import datetime
from enum import Enum
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class WorkspaceDTOState(str, Enum):
    WORKSPACE_REQUESTED = "Workspace-Requested"
    WORKSPACE_PROVISIONING = "Workspace-Provisioning"
    WORKSPACE_PROVISIONING_FAILED = "Workspace-Provisioning-Failed"
    WORKSPACE_PROVISIONED = "Workspace-Provisioned"
    WORKSPACE_ACTIVE = "Workspace-Active"
    WORKSPACE_UPDATED = "Workspace-Updated"
    WORKSPACE_FAILED_UPDATE = "Workspace-Failed-Update"
    WORKSPACE_CLEANUP_REQUESTED = "Workspace-Cleanup-Requested"
    WORKSPACE_CLEANUP_STARTED = "Workspace-Cleanup-Started"
    WORKSPACE_CLEANUP_TERRAFORM_COMPLETED = "Workspace-Cleanup-Terraform-Completed"
    WORKSPACE_CLEANUP_TERRAFORM_FAILED = "Workspace-Cleanup-Terraform-Failed"
    WORKSPACE_CLEANUP_COMPLETED = "Workspace-Cleanup-Completed"
    WORKSPACE_CLEANUP_FAILED = "Workspace-Cleanup-Failed"


class WorkspaceDTOTypedDict(TypedDict):
    workspace_id: str
    region: str
    last_updated: datetime
    leader_fqdn: str
    state: WorkspaceDTOState
    alias: NotRequired[str]
    description: NotRequired[str]
    tags: NotRequired[List[str]]


class WorkspaceDTO(BaseModel):
    workspace_id: Annotated[str, pydantic.Field(alias="workspaceId")]

    region: str

    last_updated: Annotated[datetime, pydantic.Field(alias="lastUpdated")]

    leader_fqdn: Annotated[str, pydantic.Field(alias="leaderFQDN")]

    state: WorkspaceDTOState

    alias: Optional[str] = None

    description: Optional[str] = None

    tags: Optional[List[str]] = None
