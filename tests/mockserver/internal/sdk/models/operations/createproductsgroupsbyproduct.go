// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"mockserver/internal/sdk/models/components"
)

// CreateProductsGroupsByProductProduct - Cribl Product
type CreateProductsGroupsByProductProduct string

const (
	CreateProductsGroupsByProductProductStream CreateProductsGroupsByProductProduct = "stream"
	CreateProductsGroupsByProductProductEdge   CreateProductsGroupsByProductProduct = "edge"
)

func (e CreateProductsGroupsByProductProduct) ToPointer() *CreateProductsGroupsByProductProduct {
	return &e
}
func (e *CreateProductsGroupsByProductProduct) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "stream":
		fallthrough
	case "edge":
		*e = CreateProductsGroupsByProductProduct(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateProductsGroupsByProductProduct: %v", v)
	}
}

type CreateProductsGroupsByProductRequest struct {
	// Cribl Product
	Product CreateProductsGroupsByProductProduct `pathParam:"style=simple,explode=false,name=product"`
	// ConfigGroup object
	ConfigGroup components.ConfigGroup `request:"mediaType=application/json"`
}

func (o *CreateProductsGroupsByProductRequest) GetProduct() CreateProductsGroupsByProductProduct {
	if o == nil {
		return CreateProductsGroupsByProductProduct("")
	}
	return o.Product
}

func (o *CreateProductsGroupsByProductRequest) GetConfigGroup() components.ConfigGroup {
	if o == nil {
		return components.ConfigGroup{}
	}
	return o.ConfigGroup
}

// CreateProductsGroupsByProductResponseBody - a list of ConfigGroup objects
type CreateProductsGroupsByProductResponseBody struct {
	// number of items present in the items array
	Count *int64                   `json:"count,omitempty"`
	Items []components.ConfigGroup `json:"items,omitempty"`
}

func (o *CreateProductsGroupsByProductResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *CreateProductsGroupsByProductResponseBody) GetItems() []components.ConfigGroup {
	if o == nil {
		return nil
	}
	return o.Items
}

type CreateProductsGroupsByProductResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of ConfigGroup objects
	Object *CreateProductsGroupsByProductResponseBody
}

func (o *CreateProductsGroupsByProductResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateProductsGroupsByProductResponse) GetObject() *CreateProductsGroupsByProductResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
