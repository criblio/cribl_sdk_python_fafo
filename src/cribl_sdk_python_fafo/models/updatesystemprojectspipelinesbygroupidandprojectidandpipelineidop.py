"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .pipeline import Pipeline, PipelineTypedDict
from cribl_sdk_python_fafo.types import BaseModel
from cribl_sdk_python_fafo.utils import (
    FieldMetadata,
    PathParamMetadata,
    RequestMetadata,
)
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class UpdateSystemProjectsPipelinesByGroupIDAndProjectIDAndPipelineIDRequestTypedDict(
    TypedDict
):
    group_id: str
    r"""Group Id"""
    project_id: str
    r"""Project Id"""
    pipeline_id: str
    r"""Pipeline iD"""
    pipeline: PipelineTypedDict
    r"""Pipeline object to be updated in specified Project"""


class UpdateSystemProjectsPipelinesByGroupIDAndProjectIDAndPipelineIDRequest(BaseModel):
    group_id: Annotated[
        str,
        pydantic.Field(alias="groupId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Group Id"""

    project_id: Annotated[
        str,
        pydantic.Field(alias="projectId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Project Id"""

    pipeline_id: Annotated[
        str,
        pydantic.Field(alias="pipelineId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Pipeline iD"""

    pipeline: Annotated[
        Pipeline, FieldMetadata(request=RequestMetadata(media_type="application/json"))
    ]
    r"""Pipeline object to be updated in specified Project"""


class UpdateSystemProjectsPipelinesByGroupIDAndProjectIDAndPipelineIDResponseTypedDict(
    TypedDict
):
    r"""A list of Pipeline objects for specified Project"""

    count: NotRequired[int]
    r"""Number of items present in the items array"""
    items: NotRequired[List[PipelineTypedDict]]


class UpdateSystemProjectsPipelinesByGroupIDAndProjectIDAndPipelineIDResponse(
    BaseModel
):
    r"""A list of Pipeline objects for specified Project"""

    count: Optional[int] = None
    r"""Number of items present in the items array"""

    items: Optional[List[Pipeline]] = None
