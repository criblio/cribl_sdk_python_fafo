// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type CreateEdgeFileIngestRequest struct {
	// Absolute path to file to ingest.
	FilePath *string `queryParam:"style=form,explode=true,name=filePath"`
	// Id of the pipeline to use.
	PipelineID *string `queryParam:"style=form,explode=true,name=pipelineId"`
	// Destination to send events to.
	OutputID *string `queryParam:"style=form,explode=true,name=outputId"`
	// Id to the pre-processing pipeline to use for routes.
	PreProcessingPipelineID *string `queryParam:"style=form,explode=true,name=preProcessingPipelineId"`
	// boolean condition required on whether to send events to routes.
	SendToRoutes *string `queryParam:"style=form,explode=true,name=sendToRoutes"`
	// Breaker rules to use on the file.
	BreakerRuleSet *string `queryParam:"style=form,explode=true,name=breakerRuleSet"`
}

func (o *CreateEdgeFileIngestRequest) GetFilePath() *string {
	if o == nil {
		return nil
	}
	return o.FilePath
}

func (o *CreateEdgeFileIngestRequest) GetPipelineID() *string {
	if o == nil {
		return nil
	}
	return o.PipelineID
}

func (o *CreateEdgeFileIngestRequest) GetOutputID() *string {
	if o == nil {
		return nil
	}
	return o.OutputID
}

func (o *CreateEdgeFileIngestRequest) GetPreProcessingPipelineID() *string {
	if o == nil {
		return nil
	}
	return o.PreProcessingPipelineID
}

func (o *CreateEdgeFileIngestRequest) GetSendToRoutes() *string {
	if o == nil {
		return nil
	}
	return o.SendToRoutes
}

func (o *CreateEdgeFileIngestRequest) GetBreakerRuleSet() *string {
	if o == nil {
		return nil
	}
	return o.BreakerRuleSet
}

// CreateEdgeFileIngestResponseBody - a list of any objects
type CreateEdgeFileIngestResponseBody struct {
	// number of items present in the items array
	Count *int64           `json:"count,omitempty"`
	Items []map[string]any `json:"items,omitempty"`
}

func (o *CreateEdgeFileIngestResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *CreateEdgeFileIngestResponseBody) GetItems() []map[string]any {
	if o == nil {
		return nil
	}
	return o.Items
}

type CreateEdgeFileIngestResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of any objects
	Object *CreateEdgeFileIngestResponseBody
}

func (o *CreateEdgeFileIngestResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateEdgeFileIngestResponse) GetObject() *CreateEdgeFileIngestResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
