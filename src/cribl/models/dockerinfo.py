"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .dockergraphdriver import DockerGraphDriver, DockerGraphDriverTypedDict
from .dockermount import DockerMount, DockerMountTypedDict
from cribl.types import BaseModel
import pydantic
from typing import Any, Dict, List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class DockerInfoTypedDict(TypedDict):
    config: NotRequired[Dict[str, Any]]
    graph_driver: NotRequired[DockerGraphDriverTypedDict]
    log_path: NotRequired[str]
    mounts: NotRequired[List[DockerMountTypedDict]]
    network_settings: NotRequired[Dict[str, Any]]
    path: NotRequired[str]
    state: NotRequired[Dict[str, Any]]
    stats: NotRequired[Dict[str, Any]]


class DockerInfo(BaseModel):
    config: Annotated[Optional[Dict[str, Any]], pydantic.Field(alias="Config")] = None

    graph_driver: Annotated[
        Optional[DockerGraphDriver], pydantic.Field(alias="GraphDriver")
    ] = None

    log_path: Annotated[Optional[str], pydantic.Field(alias="LogPath")] = None

    mounts: Annotated[Optional[List[DockerMount]], pydantic.Field(alias="Mounts")] = (
        None
    )

    network_settings: Annotated[
        Optional[Dict[str, Any]], pydantic.Field(alias="NetworkSettings")
    ] = None

    path: Annotated[Optional[str], pydantic.Field(alias="Path")] = None

    state: Annotated[Optional[Dict[str, Any]], pydantic.Field(alias="State")] = None

    stats: Annotated[Optional[Dict[str, Any]], pydantic.Field(alias="Stats")] = None
