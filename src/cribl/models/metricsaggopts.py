"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .aggregationmgroptions import AggregationMgrOptions, AggregationMgrOptionsTypedDict
from .metricsstore import MetricsStore, MetricsStoreTypedDict
from cribl.types import BaseModel
import pydantic
from typing import Optional, Union
from typing_extensions import Annotated, NotRequired, TypeAliasType, TypedDict


MetricsAggOptsEarliestTypedDict = TypeAliasType(
    "MetricsAggOptsEarliestTypedDict", Union[str, float]
)


MetricsAggOptsEarliest = TypeAliasType("MetricsAggOptsEarliest", Union[str, float])


MetricsAggOptsLatestTypedDict = TypeAliasType(
    "MetricsAggOptsLatestTypedDict", Union[str, float]
)


MetricsAggOptsLatest = TypeAliasType("MetricsAggOptsLatest", Union[str, float])


class MetricsAggOptsTypedDict(TypedDict):
    aggs: AggregationMgrOptionsTypedDict
    always_bounds: NotRequired[bool]
    earliest: NotRequired[MetricsAggOptsEarliestTypedDict]
    latest: NotRequired[MetricsAggOptsLatestTypedDict]
    metrics: NotRequired[MetricsStoreTypedDict]
    where: NotRequired[str]


class MetricsAggOpts(BaseModel):
    aggs: AggregationMgrOptions

    always_bounds: Annotated[Optional[bool], pydantic.Field(alias="alwaysBounds")] = (
        None
    )

    earliest: Optional[MetricsAggOptsEarliest] = None

    latest: Optional[MetricsAggOptsLatest] = None

    metrics: Optional[MetricsStore] = None

    where: Optional[str] = None
