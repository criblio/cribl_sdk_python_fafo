"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from cribl_sdk_python_fafo.types import BaseModel
import pydantic
from pydantic import ConfigDict
from typing import Any, Dict, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class DataSampleTypedDict(TypedDict):
    id: str
    sample_name: str
    pipeline_id: NotRequired[str]
    r"""Select a pipeline to associate with sample with. Select GLOBAL if not sure. Deprecated."""
    description: NotRequired[str]
    r"""Brief description of this sample file. Optional."""
    ttl: NotRequired[float]
    r"""Time to live (TTL) for the sample; reset after each use. Leave empty to never expire."""
    tags: NotRequired[str]
    r"""One or more tags related to this sample file. Optional."""


class DataSample(BaseModel):
    model_config = ConfigDict(
        populate_by_name=True, arbitrary_types_allowed=True, extra="allow"
    )
    __pydantic_extra__: Dict[str, Any] = pydantic.Field(init=False)

    id: str

    sample_name: Annotated[str, pydantic.Field(alias="sampleName")]

    pipeline_id: Annotated[Optional[str], pydantic.Field(alias="pipelineId")] = None
    r"""Select a pipeline to associate with sample with. Select GLOBAL if not sure. Deprecated."""

    description: Optional[str] = None
    r"""Brief description of this sample file. Optional."""

    ttl: Optional[float] = None
    r"""Time to live (TTL) for the sample; reset after each use. Leave empty to never expire."""

    tags: Optional[str] = None
    r"""One or more tags related to this sample file. Optional."""

    @property
    def additional_properties(self):
        return self.__pydantic_extra__

    @additional_properties.setter
    def additional_properties(self, value):
        self.__pydantic_extra__ = value  # pyright: ignore[reportIncompatibleVariableOverride]
