"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from cribl_sdk_python_fafo.types import BaseModel
from enum import Enum
import pydantic
from typing import Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class TypeRawData(str, Enum):
    RAW_DATA = "rawData"


class DatatypePreviewInputRawDataTypedDict(TypedDict):
    raw_data: str
    type: TypeRawData


class DatatypePreviewInputRawData(BaseModel):
    raw_data: Annotated[str, pydantic.Field(alias="rawData")]

    type: TypeRawData


class DatatypePreviewInputTypeDataset(str, Enum):
    DATASET = "dataset"


class DatatypePreviewInputDatasetTypedDict(TypedDict):
    dataset: str
    type: DatatypePreviewInputTypeDataset


class DatatypePreviewInputDataset(BaseModel):
    dataset: str

    type: DatatypePreviewInputTypeDataset


DatatypePreviewInputTypedDict = TypeAliasType(
    "DatatypePreviewInputTypedDict",
    Union[DatatypePreviewInputDatasetTypedDict, DatatypePreviewInputRawDataTypedDict],
)


DatatypePreviewInput = TypeAliasType(
    "DatatypePreviewInput",
    Union[DatatypePreviewInputDataset, DatatypePreviewInputRawData],
)
