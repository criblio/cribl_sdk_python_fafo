// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"mockserver/internal/sdk/models/components"
)

// GetProductsUsersByProductProduct - product by which to filter members
type GetProductsUsersByProductProduct string

const (
	GetProductsUsersByProductProductStream GetProductsUsersByProductProduct = "stream"
	GetProductsUsersByProductProductEdge   GetProductsUsersByProductProduct = "edge"
	GetProductsUsersByProductProductSearch GetProductsUsersByProductProduct = "search"
	GetProductsUsersByProductProductLake   GetProductsUsersByProductProduct = "lake"
)

func (e GetProductsUsersByProductProduct) ToPointer() *GetProductsUsersByProductProduct {
	return &e
}
func (e *GetProductsUsersByProductProduct) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "stream":
		fallthrough
	case "edge":
		fallthrough
	case "search":
		fallthrough
	case "lake":
		*e = GetProductsUsersByProductProduct(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetProductsUsersByProductProduct: %v", v)
	}
}

type GetProductsUsersByProductRequest struct {
	// product by which to filter members
	Product GetProductsUsersByProductProduct `pathParam:"style=simple,explode=false,name=product"`
	// filter to specific group by groupId
	GroupID *string `queryParam:"style=form,explode=true,name=groupId"`
}

func (o *GetProductsUsersByProductRequest) GetProduct() GetProductsUsersByProductProduct {
	if o == nil {
		return GetProductsUsersByProductProduct("")
	}
	return o.Product
}

func (o *GetProductsUsersByProductRequest) GetGroupID() *string {
	if o == nil {
		return nil
	}
	return o.GroupID
}

// GetProductsUsersByProductResponseBody - a list of User objects
type GetProductsUsersByProductResponseBody struct {
	// number of items present in the items array
	Count *int64            `json:"count,omitempty"`
	Items []components.User `json:"items,omitempty"`
}

func (o *GetProductsUsersByProductResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *GetProductsUsersByProductResponseBody) GetItems() []components.User {
	if o == nil {
		return nil
	}
	return o.Items
}

type GetProductsUsersByProductResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of User objects
	Object *GetProductsUsersByProductResponseBody
}

func (o *GetProductsUsersByProductResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetProductsUsersByProductResponse) GetObject() *GetProductsUsersByProductResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
