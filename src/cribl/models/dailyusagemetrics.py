"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from cribl.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class DailyUsageMetricsTypedDict(TypedDict):
    end_time: float
    exempted_license_in_bytes: float
    in_bytes: float
    in_events: float
    out_bytes: float
    out_events: float
    start_time: float
    dropped_bytes: NotRequired[float]
    in_metrics_events: NotRequired[float]


class DailyUsageMetrics(BaseModel):
    end_time: Annotated[float, pydantic.Field(alias="endTime")]

    exempted_license_in_bytes: Annotated[
        float, pydantic.Field(alias="exemptedLicenseInBytes")
    ]

    in_bytes: Annotated[float, pydantic.Field(alias="inBytes")]

    in_events: Annotated[float, pydantic.Field(alias="inEvents")]

    out_bytes: Annotated[float, pydantic.Field(alias="outBytes")]

    out_events: Annotated[float, pydantic.Field(alias="outEvents")]

    start_time: Annotated[float, pydantic.Field(alias="startTime")]

    dropped_bytes: Annotated[Optional[float], pydantic.Field(alias="droppedBytes")] = (
        None
    )

    in_metrics_events: Annotated[
        Optional[float], pydantic.Field(alias="inMetricsEvents")
    ] = None
