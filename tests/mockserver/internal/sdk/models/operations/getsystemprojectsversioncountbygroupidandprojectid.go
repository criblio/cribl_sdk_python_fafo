// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type GetSystemProjectsVersionCountByGroupIDAndProjectIDRequest struct {
	// Group Id
	GroupID string `pathParam:"style=simple,explode=false,name=groupId"`
	// Project Id
	ProjectID string `pathParam:"style=simple,explode=false,name=projectId"`
}

func (o *GetSystemProjectsVersionCountByGroupIDAndProjectIDRequest) GetGroupID() string {
	if o == nil {
		return ""
	}
	return o.GroupID
}

func (o *GetSystemProjectsVersionCountByGroupIDAndProjectIDRequest) GetProjectID() string {
	if o == nil {
		return ""
	}
	return o.ProjectID
}

// GetSystemProjectsVersionCountByGroupIDAndProjectIDResponseBody - A list of any objects
type GetSystemProjectsVersionCountByGroupIDAndProjectIDResponseBody struct {
	// Number of items present in the items array
	Count *int64           `json:"count,omitempty"`
	Items []map[string]any `json:"items,omitempty"`
}

func (o *GetSystemProjectsVersionCountByGroupIDAndProjectIDResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *GetSystemProjectsVersionCountByGroupIDAndProjectIDResponseBody) GetItems() []map[string]any {
	if o == nil {
		return nil
	}
	return o.Items
}

type GetSystemProjectsVersionCountByGroupIDAndProjectIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// A list of any objects
	Object *GetSystemProjectsVersionCountByGroupIDAndProjectIDResponseBody
}

func (o *GetSystemProjectsVersionCountByGroupIDAndProjectIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetSystemProjectsVersionCountByGroupIDAndProjectIDResponse) GetObject() *GetSystemProjectsVersionCountByGroupIDAndProjectIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
