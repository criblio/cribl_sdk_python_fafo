"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .gitcommitsummary import GitCommitSummary, GitCommitSummaryTypedDict
from .projectgitcommitparams import (
    ProjectGitCommitParams,
    ProjectGitCommitParamsTypedDict,
)
from cribl.types import BaseModel
from cribl.utils import FieldMetadata, PathParamMetadata, RequestMetadata
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class CreateSystemProjectsVersionCommitByProjectIDRequestTypedDict(TypedDict):
    project_id: str
    r"""Project Id"""
    project_git_commit_params: ProjectGitCommitParamsTypedDict
    r"""ProjectGitCommitParams object"""


class CreateSystemProjectsVersionCommitByProjectIDRequest(BaseModel):
    project_id: Annotated[
        str,
        pydantic.Field(alias="projectId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Project Id"""

    project_git_commit_params: Annotated[
        ProjectGitCommitParams,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]
    r"""ProjectGitCommitParams object"""


class CreateSystemProjectsVersionCommitByProjectIDResponseBodyTypedDict(TypedDict):
    r"""a list of GitCommitSummary objects"""

    count: NotRequired[int]
    r"""number of items present in the items array"""
    items: NotRequired[List[GitCommitSummaryTypedDict]]


class CreateSystemProjectsVersionCommitByProjectIDResponseBody(BaseModel):
    r"""a list of GitCommitSummary objects"""

    count: Optional[int] = None
    r"""number of items present in the items array"""

    items: Optional[List[GitCommitSummary]] = None
