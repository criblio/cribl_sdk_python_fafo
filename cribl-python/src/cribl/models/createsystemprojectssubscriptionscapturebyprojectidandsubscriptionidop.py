"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .captureparams import CaptureParams, CaptureParamsTypedDict
from cribl.types import BaseModel
from cribl.utils import FieldMetadata, PathParamMetadata, RequestMetadata
import pydantic
from typing import Any, Dict, List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class CreateSystemProjectsSubscriptionsCaptureByProjectIDAndSubscriptionIDRequestTypedDict(
    TypedDict
):
    project_id: str
    r"""Project Id"""
    subscription_id: str
    r"""SubscriptionId Id"""
    capture_params: CaptureParamsTypedDict
    r"""CaptureParams object"""


class CreateSystemProjectsSubscriptionsCaptureByProjectIDAndSubscriptionIDRequest(
    BaseModel
):
    project_id: Annotated[
        str,
        pydantic.Field(alias="projectId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Project Id"""

    subscription_id: Annotated[
        str,
        pydantic.Field(alias="subscriptionId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""SubscriptionId Id"""

    capture_params: Annotated[
        CaptureParams,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]
    r"""CaptureParams object"""


class CreateSystemProjectsSubscriptionsCaptureByProjectIDAndSubscriptionIDResponseBodyTypedDict(
    TypedDict
):
    r"""a list of any objects"""

    count: NotRequired[int]
    r"""number of items present in the items array"""
    items: NotRequired[List[Dict[str, Any]]]


class CreateSystemProjectsSubscriptionsCaptureByProjectIDAndSubscriptionIDResponseBody(
    BaseModel
):
    r"""a list of any objects"""

    count: Optional[int] = None
    r"""number of items present in the items array"""

    items: Optional[List[Dict[str, Any]]] = None
