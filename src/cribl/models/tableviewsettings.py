"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .columnfiltersettings import ColumnFilterSettings, ColumnFilterSettingsTypedDict
from .columnformatsettings import ColumnFormatSettings, ColumnFormatSettingsTypedDict
from .columnordersettings import ColumnOrderSettings, ColumnOrderSettingsTypedDict
from .columnsortsettings import ColumnSortSettings, ColumnSortSettingsTypedDict
from cribl.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class TableViewSettingsTypedDict(TypedDict):
    show_column_totals: bool
    show_column_totals_pinned: bool
    show_row_numbers: bool
    show_row_totals: bool
    show_row_totals_pinned: bool
    column_filter_settings: NotRequired[ColumnFilterSettingsTypedDict]
    column_format_settings: NotRequired[ColumnFormatSettingsTypedDict]
    column_order_settings: NotRequired[ColumnOrderSettingsTypedDict]
    column_sort_settings: NotRequired[ColumnSortSettingsTypedDict]
    event_details_panel: NotRequired[bool]
    event_table_fields: NotRequired[List[str]]
    row_number_column_width: NotRequired[float]
    wrap_cells: NotRequired[bool]


class TableViewSettings(BaseModel):
    show_column_totals: Annotated[bool, pydantic.Field(alias="showColumnTotals")]

    show_column_totals_pinned: Annotated[
        bool, pydantic.Field(alias="showColumnTotalsPinned")
    ]

    show_row_numbers: Annotated[bool, pydantic.Field(alias="showRowNumbers")]

    show_row_totals: Annotated[bool, pydantic.Field(alias="showRowTotals")]

    show_row_totals_pinned: Annotated[bool, pydantic.Field(alias="showRowTotalsPinned")]

    column_filter_settings: Annotated[
        Optional[ColumnFilterSettings], pydantic.Field(alias="columnFilterSettings")
    ] = None

    column_format_settings: Annotated[
        Optional[ColumnFormatSettings], pydantic.Field(alias="columnFormatSettings")
    ] = None

    column_order_settings: Annotated[
        Optional[ColumnOrderSettings], pydantic.Field(alias="columnOrderSettings")
    ] = None

    column_sort_settings: Annotated[
        Optional[ColumnSortSettings], pydantic.Field(alias="columnSortSettings")
    ] = None

    event_details_panel: Annotated[
        Optional[bool], pydantic.Field(alias="eventDetailsPanel")
    ] = None

    event_table_fields: Annotated[
        Optional[List[str]], pydantic.Field(alias="eventTableFields")
    ] = None

    row_number_column_width: Annotated[
        Optional[float], pydantic.Field(alias="rowNumberColumnWidth")
    ] = None

    wrap_cells: Annotated[Optional[bool], pydantic.Field(alias="wrapCells")] = None
