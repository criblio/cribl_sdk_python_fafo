"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from cribl.types import BaseModel
from enum import Enum
import pydantic
from typing import Any, Dict, List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class Mode(str, Enum):
    PIPE = "pipe"
    ROUTE = "route"
    ROUTE_AND_SEND = "routeAndSend"


class PreviewDataParamsTypedDict(TypedDict):
    mode: Mode
    pipeline_id: str
    sample_id: str
    cpu_profile: NotRequired[bool]
    dropped: NotRequired[bool]
    enhance_metrics_output: NotRequired[bool]
    events: NotRequired[List[Dict[str, Any]]]
    input_id: NotRequired[str]
    level: NotRequired[float]
    memory: NotRequired[float]
    sample_pipeline_id: NotRequired[str]
    timeout: NotRequired[float]


class PreviewDataParams(BaseModel):
    mode: Mode

    pipeline_id: Annotated[str, pydantic.Field(alias="pipelineId")]

    sample_id: Annotated[str, pydantic.Field(alias="sampleId")]

    cpu_profile: Annotated[Optional[bool], pydantic.Field(alias="cpuProfile")] = None

    dropped: Optional[bool] = None

    enhance_metrics_output: Annotated[
        Optional[bool], pydantic.Field(alias="enhanceMetricsOutput")
    ] = None

    events: Optional[List[Dict[str, Any]]] = None

    input_id: Annotated[Optional[str], pydantic.Field(alias="inputId")] = None

    level: Optional[float] = None

    memory: Optional[float] = None

    sample_pipeline_id: Annotated[
        Optional[str], pydantic.Field(alias="samplePipelineId")
    ] = None

    timeout: Optional[float] = None
