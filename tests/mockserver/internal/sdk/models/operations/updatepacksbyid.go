// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type UpdatePacksByIDRequest struct {
	// Pack name
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// body string required Pack source
	Source *string `queryParam:"style=form,explode=true,name=source"`
	// body boolean optional Only upgrade to minor/patch versions
	Minor *string `queryParam:"style=form,explode=true,name=minor"`
	// body string optional Specify a branch, tag or a semver spec
	Spec *string `queryParam:"style=form,explode=true,name=spec"`
}

func (o *UpdatePacksByIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *UpdatePacksByIDRequest) GetSource() *string {
	if o == nil {
		return nil
	}
	return o.Source
}

func (o *UpdatePacksByIDRequest) GetMinor() *string {
	if o == nil {
		return nil
	}
	return o.Minor
}

func (o *UpdatePacksByIDRequest) GetSpec() *string {
	if o == nil {
		return nil
	}
	return o.Spec
}

// UpdatePacksByIDResponseBody - a list of PackInfo objects
type UpdatePacksByIDResponseBody struct {
	// number of items present in the items array
	Count *int64                `json:"count,omitempty"`
	Items []components.PackInfo `json:"items,omitempty"`
}

func (o *UpdatePacksByIDResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *UpdatePacksByIDResponseBody) GetItems() []components.PackInfo {
	if o == nil {
		return nil
	}
	return o.Items
}

type UpdatePacksByIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of PackInfo objects
	Object *UpdatePacksByIDResponseBody
}

func (o *UpdatePacksByIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UpdatePacksByIDResponse) GetObject() *UpdatePacksByIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
