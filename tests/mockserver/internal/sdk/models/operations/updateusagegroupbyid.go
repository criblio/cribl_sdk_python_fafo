// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type UpdateUsageGroupByIDRequest struct {
	// Unique ID to PATCH
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// UsageGroup object to be updated
	UsageGroup components.UsageGroup `request:"mediaType=application/json"`
}

func (o *UpdateUsageGroupByIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *UpdateUsageGroupByIDRequest) GetUsageGroup() components.UsageGroup {
	if o == nil {
		return components.UsageGroup{}
	}
	return o.UsageGroup
}

// UpdateUsageGroupByIDResponseBody - a list of UsageGroup objects
type UpdateUsageGroupByIDResponseBody struct {
	// number of items present in the items array
	Count *int64                  `json:"count,omitempty"`
	Items []components.UsageGroup `json:"items,omitempty"`
}

func (o *UpdateUsageGroupByIDResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *UpdateUsageGroupByIDResponseBody) GetItems() []components.UsageGroup {
	if o == nil {
		return nil
	}
	return o.Items
}

type UpdateUsageGroupByIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of UsageGroup objects
	Object *UpdateUsageGroupByIDResponseBody
}

func (o *UpdateUsageGroupByIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UpdateUsageGroupByIDResponse) GetObject() *UpdateUsageGroupByIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
