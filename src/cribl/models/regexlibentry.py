"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from cribl.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class RegexLibEntryTypedDict(TypedDict):
    id: str
    regex: str
    lib: NotRequired[str]
    description: NotRequired[str]
    r"""Brief description of this regex (optional)"""
    sample_data: NotRequired[str]
    r"""Sample data for this regex (optional)"""
    tags: NotRequired[str]
    r"""One or more tags related to this regex (optional)"""


class RegexLibEntry(BaseModel):
    id: str

    regex: str

    lib: Optional[str] = None

    description: Optional[str] = None
    r"""Brief description of this regex (optional)"""

    sample_data: Annotated[Optional[str], pydantic.Field(alias="sampleData")] = None
    r"""Sample data for this regex (optional)"""

    tags: Optional[str] = None
    r"""One or more tags related to this regex (optional)"""
