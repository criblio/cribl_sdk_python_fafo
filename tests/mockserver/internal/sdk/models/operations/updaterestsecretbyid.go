// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type UpdateRestSecretByIDRequest struct {
	// Unique ID to PATCH
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// RestSecret object to be updated
	RestSecret components.RestSecret `request:"mediaType=application/json"`
}

func (o *UpdateRestSecretByIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *UpdateRestSecretByIDRequest) GetRestSecret() components.RestSecret {
	if o == nil {
		return components.RestSecret{}
	}
	return o.RestSecret
}

// UpdateRestSecretByIDResponseBody - a list of RestSecret objects
type UpdateRestSecretByIDResponseBody struct {
	// number of items present in the items array
	Count *int64                  `json:"count,omitempty"`
	Items []components.RestSecret `json:"items,omitempty"`
}

func (o *UpdateRestSecretByIDResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *UpdateRestSecretByIDResponseBody) GetItems() []components.RestSecret {
	if o == nil {
		return nil
	}
	return o.Items
}

type UpdateRestSecretByIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of RestSecret objects
	Object *UpdateRestSecretByIDResponseBody
}

func (o *UpdateRestSecretByIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UpdateRestSecretByIDResponse) GetObject() *UpdateRestSecretByIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
