"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from cribl.types import BaseModel
from datetime import datetime
from enum import Enum
import pydantic
from typing_extensions import Annotated, TypedDict


class State(str, Enum):
    ASSIGNED = "ASSIGNED"


class AssignedSandboxAssignmentDTOTypedDict(TypedDict):
    organization_id: str
    workspace_id: str
    state: State
    user_id: str
    course_id: str
    assigned_at: datetime
    expires_at: datetime


class AssignedSandboxAssignmentDTO(BaseModel):
    organization_id: Annotated[str, pydantic.Field(alias="organizationId")]

    workspace_id: Annotated[str, pydantic.Field(alias="workspaceId")]

    state: State

    user_id: Annotated[str, pydantic.Field(alias="userId")]

    course_id: Annotated[str, pydantic.Field(alias="courseId")]

    assigned_at: Annotated[datetime, pydantic.Field(alias="assignedAt")]

    expires_at: Annotated[datetime, pydantic.Field(alias="expiresAt")]
