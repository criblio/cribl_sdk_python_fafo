// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type UpdateEventBreakerRulesetByIDRequest struct {
	// Unique ID to PATCH
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Event Breaker Ruleset object to be updated
	EventBreakerRuleset components.EventBreakerRuleset `request:"mediaType=application/json"`
}

func (o *UpdateEventBreakerRulesetByIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *UpdateEventBreakerRulesetByIDRequest) GetEventBreakerRuleset() components.EventBreakerRuleset {
	if o == nil {
		return components.EventBreakerRuleset{}
	}
	return o.EventBreakerRuleset
}

// UpdateEventBreakerRulesetByIDResponseBody - a list of Event Breaker Ruleset objects
type UpdateEventBreakerRulesetByIDResponseBody struct {
	// number of items present in the items array
	Count *int64                           `json:"count,omitempty"`
	Items []components.EventBreakerRuleset `json:"items,omitempty"`
}

func (o *UpdateEventBreakerRulesetByIDResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *UpdateEventBreakerRulesetByIDResponseBody) GetItems() []components.EventBreakerRuleset {
	if o == nil {
		return nil
	}
	return o.Items
}

type UpdateEventBreakerRulesetByIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of Event Breaker Ruleset objects
	Object *UpdateEventBreakerRulesetByIDResponseBody
}

func (o *UpdateEventBreakerRulesetByIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UpdateEventBreakerRulesetByIDResponse) GetObject() *UpdateEventBreakerRulesetByIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
