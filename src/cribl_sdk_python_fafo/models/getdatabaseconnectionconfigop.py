"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .databaseconnectionconfig import (
    DatabaseConnectionConfig,
    DatabaseConnectionConfigTypedDict,
)
from cribl_sdk_python_fafo.types import BaseModel
from cribl_sdk_python_fafo.utils import FieldMetadata, QueryParamMetadata
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetDatabaseConnectionConfigRequestTypedDict(TypedDict):
    database_type: NotRequired[str]
    r"""type of database connection"""


class GetDatabaseConnectionConfigRequest(BaseModel):
    database_type: Annotated[
        Optional[str],
        pydantic.Field(alias="databaseType"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""type of database connection"""


class GetDatabaseConnectionConfigResponseTypedDict(TypedDict):
    r"""a list of DatabaseConnectionConfig objects"""

    count: NotRequired[int]
    r"""number of items present in the items array"""
    items: NotRequired[List[DatabaseConnectionConfigTypedDict]]


class GetDatabaseConnectionConfigResponse(BaseModel):
    r"""a list of DatabaseConnectionConfig objects"""

    count: Optional[int] = None
    r"""number of items present in the items array"""

    items: Optional[List[DatabaseConnectionConfig]] = None
