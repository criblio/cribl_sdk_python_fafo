"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from cribl.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class CertificateTypedDict(TypedDict):
    id: str
    cert: str
    r"""Drag/drop or upload host certificate in PEM/Base64 format, or paste its contents here"""
    priv_key: str
    description: NotRequired[str]
    passphrase: NotRequired[str]
    ca: NotRequired[str]
    r"""Optionally, drag/drop or upload all CA certificates in PEM/Base64 format. Or, paste certificate contents here. Certificates can be used for client and/or server authentication."""
    in_use: NotRequired[List[str]]
    r"""List of configurations that reference this certificate"""


class Certificate(BaseModel):
    id: str

    cert: str
    r"""Drag/drop or upload host certificate in PEM/Base64 format, or paste its contents here"""

    priv_key: Annotated[str, pydantic.Field(alias="privKey")]

    description: Optional[str] = None

    passphrase: Optional[str] = None

    ca: Optional[str] = None
    r"""Optionally, drag/drop or upload all CA certificates in PEM/Base64 format. Or, paste certificate contents here. Certificates can be used for client and/or server authentication."""

    in_use: Annotated[Optional[List[str]], pydantic.Field(alias="inUse")] = None
    r"""List of configurations that reference this certificate"""
