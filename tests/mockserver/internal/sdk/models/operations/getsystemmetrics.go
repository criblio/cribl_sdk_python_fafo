// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type GetSystemMetricsRequest struct {
	// worker process to query, this would work only on a worker node
	Wp *string `queryParam:"style=form,explode=true,name=wp"`
	// buckets in the past to include in the query results
	NumBuckets *float64 `queryParam:"style=form,explode=true,name=numBuckets"`
	// earliest time to query against
	Earliest *string `queryParam:"style=form,explode=true,name=earliest"`
	// latest time to query against
	Latest *string `queryParam:"style=form,explode=true,name=latest"`
	// can be a regex or an array of metric names
	MetricNameFilter *string `queryParam:"style=form,explode=true,name=metricNameFilter"`
	// a js expression to apply against the metrics returned (can filter dimensions)
	FilterExpr *string `queryParam:"style=form,explode=true,name=filterExpr"`
}

func (o *GetSystemMetricsRequest) GetWp() *string {
	if o == nil {
		return nil
	}
	return o.Wp
}

func (o *GetSystemMetricsRequest) GetNumBuckets() *float64 {
	if o == nil {
		return nil
	}
	return o.NumBuckets
}

func (o *GetSystemMetricsRequest) GetEarliest() *string {
	if o == nil {
		return nil
	}
	return o.Earliest
}

func (o *GetSystemMetricsRequest) GetLatest() *string {
	if o == nil {
		return nil
	}
	return o.Latest
}

func (o *GetSystemMetricsRequest) GetMetricNameFilter() *string {
	if o == nil {
		return nil
	}
	return o.MetricNameFilter
}

func (o *GetSystemMetricsRequest) GetFilterExpr() *string {
	if o == nil {
		return nil
	}
	return o.FilterExpr
}

// GetSystemMetricsResponseBody - a list of Response objects
type GetSystemMetricsResponseBody struct {
	// number of items present in the items array
	Count *int64           `json:"count,omitempty"`
	Items []map[string]any `json:"items,omitempty"`
}

func (o *GetSystemMetricsResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *GetSystemMetricsResponseBody) GetItems() []map[string]any {
	if o == nil {
		return nil
	}
	return o.Items
}

type GetSystemMetricsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of Response objects
	Object *GetSystemMetricsResponseBody
}

func (o *GetSystemMetricsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetSystemMetricsResponse) GetObject() *GetSystemMetricsResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
