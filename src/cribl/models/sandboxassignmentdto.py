"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from cribl.types import BaseModel
from datetime import datetime
from enum import Enum
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class SandboxAssignmentDTOState(str, Enum):
    PROVISIONING = "PROVISIONING"
    AVAILABLE = "AVAILABLE"
    ASSIGNING = "ASSIGNING"
    ASSIGNED = "ASSIGNED"
    DELETING = "DELETING"


class SandboxAssignmentDTOTypedDict(TypedDict):
    organization_id: str
    workspace_id: str
    state: SandboxAssignmentDTOState
    created_at: datetime
    updated_at: datetime
    user_id: NotRequired[str]
    course_id: NotRequired[str]
    assigned_at: NotRequired[datetime]
    expires_at: NotRequired[datetime]


class SandboxAssignmentDTO(BaseModel):
    organization_id: Annotated[str, pydantic.Field(alias="organizationId")]

    workspace_id: Annotated[str, pydantic.Field(alias="workspaceId")]

    state: SandboxAssignmentDTOState

    created_at: Annotated[datetime, pydantic.Field(alias="createdAt")]

    updated_at: Annotated[datetime, pydantic.Field(alias="updatedAt")]

    user_id: Annotated[Optional[str], pydantic.Field(alias="userId")] = None

    course_id: Annotated[Optional[str], pydantic.Field(alias="courseId")] = None

    assigned_at: Annotated[Optional[datetime], pydantic.Field(alias="assignedAt")] = (
        None
    )

    expires_at: Annotated[Optional[datetime], pydantic.Field(alias="expiresAt")] = None
