"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .scriptlibentry import ScriptLibEntry, ScriptLibEntryTypedDict
from cribl.types import BaseModel
from cribl.utils import FieldMetadata, PathParamMetadata, RequestMetadata
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class UpdateScriptByIDRequestTypedDict(TypedDict):
    id_param: str
    r"""Unique ID to PATCH"""
    script_lib_entry: ScriptLibEntryTypedDict
    r"""Script object to be updated"""


class UpdateScriptByIDRequest(BaseModel):
    id_param: Annotated[
        str,
        pydantic.Field(alias="id"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Unique ID to PATCH"""

    script_lib_entry: Annotated[
        ScriptLibEntry,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]
    r"""Script object to be updated"""


class UpdateScriptByIDResponseBodyTypedDict(TypedDict):
    r"""a list of Script objects"""

    count: NotRequired[int]
    r"""number of items present in the items array"""
    items: NotRequired[List[ScriptLibEntryTypedDict]]


class UpdateScriptByIDResponseBody(BaseModel):
    r"""a list of Script objects"""

    count: Optional[int] = None
    r"""number of items present in the items array"""

    items: Optional[List[ScriptLibEntry]] = None
