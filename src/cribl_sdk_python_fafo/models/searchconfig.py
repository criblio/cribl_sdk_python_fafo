"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .searchterm import SearchTerm, SearchTermTypedDict
from .sortbyfield import SortByField, SortByFieldTypedDict
from cribl_sdk_python_fafo.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class SearchConfigTypedDict(TypedDict):
    datasets: List[str]
    has_send_operator: bool
    ordered_field_names: List[str]
    search_terms: List[SearchTermTypedDict]
    use_formatted_visualization: bool
    can_compute_metadata_distributively: NotRequired[bool]
    referenced_field_names: NotRequired[List[str]]
    sort_fields: NotRequired[List[SortByFieldTypedDict]]


class SearchConfig(BaseModel):
    datasets: List[str]

    has_send_operator: Annotated[bool, pydantic.Field(alias="hasSendOperator")]

    ordered_field_names: Annotated[List[str], pydantic.Field(alias="orderedFieldNames")]

    search_terms: Annotated[List[SearchTerm], pydantic.Field(alias="searchTerms")]

    use_formatted_visualization: Annotated[
        bool, pydantic.Field(alias="useFormattedVisualization")
    ]

    can_compute_metadata_distributively: Annotated[
        Optional[bool], pydantic.Field(alias="canComputeMetadataDistributively")
    ] = None

    referenced_field_names: Annotated[
        Optional[List[str]], pydantic.Field(alias="referencedFieldNames")
    ] = None

    sort_fields: Annotated[
        Optional[List[SortByField]], pydantic.Field(alias="sortFields")
    ] = None
