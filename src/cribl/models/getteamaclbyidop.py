"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .resourcepolicy import ResourcePolicy, ResourcePolicyTypedDict
from cribl.types import BaseModel
from cribl.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
from enum import Enum
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class QueryParamType(str, Enum):
    r"""resource type by which to filter access levels"""

    GROUPS = "groups"
    DATASETS = "datasets"
    DATASET_PROVIDERS = "dataset-providers"
    PROJECTS = "projects"
    DASHBOARDS = "dashboards"
    MACROS = "macros"


class GetTeamACLByIDRequestTypedDict(TypedDict):
    id: str
    r"""Team name"""
    type: NotRequired[QueryParamType]
    r"""resource type by which to filter access levels"""


class GetTeamACLByIDRequest(BaseModel):
    id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Team name"""

    type: Annotated[
        Optional[QueryParamType],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""resource type by which to filter access levels"""


class GetTeamACLByIDResponseBodyTypedDict(TypedDict):
    r"""a list of ResourcePolicy objects"""

    count: NotRequired[int]
    r"""number of items present in the items array"""
    items: NotRequired[List[ResourcePolicyTypedDict]]


class GetTeamACLByIDResponseBody(BaseModel):
    r"""a list of ResourcePolicy objects"""

    count: Optional[int] = None
    r"""number of items present in the items array"""

    items: Optional[List[ResourcePolicy]] = None
