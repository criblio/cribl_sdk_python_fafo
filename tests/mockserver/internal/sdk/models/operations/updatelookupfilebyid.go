// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type UpdateLookupFileByIDRequest struct {
	// Unique ID to PATCH
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// LookupFile object to be updated
	LookupFile components.LookupFileInputUnion `request:"mediaType=application/json"`
}

func (o *UpdateLookupFileByIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *UpdateLookupFileByIDRequest) GetLookupFile() components.LookupFileInputUnion {
	if o == nil {
		return components.LookupFileInputUnion{}
	}
	return o.LookupFile
}

// UpdateLookupFileByIDResponseBody - a list of LookupFile objects
type UpdateLookupFileByIDResponseBody struct {
	// number of items present in the items array
	Count *int64                       `json:"count,omitempty"`
	Items []components.LookupFileUnion `json:"items,omitempty"`
}

func (o *UpdateLookupFileByIDResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *UpdateLookupFileByIDResponseBody) GetItems() []components.LookupFileUnion {
	if o == nil {
		return nil
	}
	return o.Items
}

type UpdateLookupFileByIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of LookupFile objects
	Object *UpdateLookupFileByIDResponseBody
}

func (o *UpdateLookupFileByIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UpdateLookupFileByIDResponse) GetObject() *UpdateLookupFileByIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
