// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type UpdateNotificationByIDRequest struct {
	// Unique ID to PATCH
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Notification object to be updated
	Notification components.Notification `request:"mediaType=application/json"`
}

func (o *UpdateNotificationByIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *UpdateNotificationByIDRequest) GetNotification() components.Notification {
	if o == nil {
		return components.Notification{}
	}
	return o.Notification
}

// UpdateNotificationByIDResponseBody - a list of Notification objects
type UpdateNotificationByIDResponseBody struct {
	// number of items present in the items array
	Count *int64                    `json:"count,omitempty"`
	Items []components.Notification `json:"items,omitempty"`
}

func (o *UpdateNotificationByIDResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *UpdateNotificationByIDResponseBody) GetItems() []components.Notification {
	if o == nil {
		return nil
	}
	return o.Items
}

type UpdateNotificationByIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of Notification objects
	Object *UpdateNotificationByIDResponseBody
}

func (o *UpdateNotificationByIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UpdateNotificationByIDResponse) GetObject() *UpdateNotificationByIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
