"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .uistatepatch import UIStatePatch, UIStatePatchTypedDict
from cribl.types import BaseModel
from cribl.utils import FieldMetadata, PathParamMetadata, RequestMetadata
from typing import Any, Dict, List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class UpdateUIByKeyRequestTypedDict(TypedDict):
    key: str
    r"""UI state key"""
    ui_state_patch: UIStatePatchTypedDict
    r"""UI State Patch object"""


class UpdateUIByKeyRequest(BaseModel):
    key: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""UI state key"""

    ui_state_patch: Annotated[
        UIStatePatch,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]
    r"""UI State Patch object"""


class UpdateUIByKeyResponseBodyTypedDict(TypedDict):
    r"""a list of any objects"""

    count: NotRequired[int]
    r"""number of items present in the items array"""
    items: NotRequired[List[Dict[str, Any]]]


class UpdateUIByKeyResponseBody(BaseModel):
    r"""a list of any objects"""

    count: Optional[int] = None
    r"""number of items present in the items array"""

    items: Optional[List[Dict[str, Any]]] = None
