"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from .basesdk import BaseSDK
from .httpclient import AsyncHttpClient, ClientOwner, HttpClient, close_clients
from .sdkconfiguration import SDKConfiguration
from .utils.logger import Logger, get_default_logger
from .utils.retries import RetryConfig
from cribl_sdk_python_fafo import models
from cribl_sdk_python_fafo._hooks import SDKHooks
from cribl_sdk_python_fafo.types import OptionalNullable, UNSET
import httpx
import importlib
from typing import Callable, Optional, TYPE_CHECKING, Union, cast
import weakref

if TYPE_CHECKING:
    from cribl_sdk_python_fafo.ai_settings import AiSettings
    from cribl_sdk_python_fafo.appscope_configs import AppscopeConfigs
    from cribl_sdk_python_fafo.auth_sdk import AuthSDK
    from cribl_sdk_python_fafo.authorize import Authorize
    from cribl_sdk_python_fafo.banners import Banners
    from cribl_sdk_python_fafo.certificates import Certificates
    from cribl_sdk_python_fafo.changelog import Changelog
    from cribl_sdk_python_fafo.click_house import ClickHouse
    from cribl_sdk_python_fafo.clui import Clui
    from cribl_sdk_python_fafo.collectors_sdk import CollectorsSDK
    from cribl_sdk_python_fafo.conditions import Conditions
    from cribl_sdk_python_fafo.consent import Consent
    from cribl_sdk_python_fafo.dashboardcategories import DashboardCategories
    from cribl_sdk_python_fafo.dashboards import Dashboards
    from cribl_sdk_python_fafo.database_connections import DatabaseConnections
    from cribl_sdk_python_fafo.datasets import Datasets
    from cribl_sdk_python_fafo.diag_sdk import DiagSDK
    from cribl_sdk_python_fafo.distributed_sdk import DistributedSDK
    from cribl_sdk_python_fafo.edge import Edge
    from cribl_sdk_python_fafo.edgeappscopeprocesses import EdgeAppScopeProcesses
    from cribl_sdk_python_fafo.edgecontainers import EdgeContainers
    from cribl_sdk_python_fafo.edgeevents import EdgeEvents
    from cribl_sdk_python_fafo.edgefiles import EdgeFiles
    from cribl_sdk_python_fafo.edgels import EdgeLs
    from cribl_sdk_python_fafo.edgeprocesses import EdgeProcesses
    from cribl_sdk_python_fafo.event_breaker_rules import EventBreakerRules
    from cribl_sdk_python_fafo.events import Events
    from cribl_sdk_python_fafo.executors import Executors
    from cribl_sdk_python_fafo.expressions import Expressions
    from cribl_sdk_python_fafo.features import Features
    from cribl_sdk_python_fafo.file_sdk import FileSDK
    from cribl_sdk_python_fafo.filesampler import FileSampler
    from cribl_sdk_python_fafo.functions import Functions
    from cribl_sdk_python_fafo.git_sdk import GitSDK
    from cribl_sdk_python_fafo.global_variables import GlobalVariables
    from cribl_sdk_python_fafo.grokfiles import Grokfiles
    from cribl_sdk_python_fafo.groups_sdk import GroupsSDK
    from cribl_sdk_python_fafo.health_sdk import HealthSDK
    from cribl_sdk_python_fafo.hmac_functions import HmacFunctions
    from cribl_sdk_python_fafo.ingest import Ingest
    from cribl_sdk_python_fafo.inputs import Inputs
    from cribl_sdk_python_fafo.iometrics import Iometrics
    from cribl_sdk_python_fafo.jobs import Jobs
    from cribl_sdk_python_fafo.keys import Keys
    from cribl_sdk_python_fafo.kube_logs import KubeLogs
    from cribl_sdk_python_fafo.kube_proxy import KubeProxy
    from cribl_sdk_python_fafo.lake import Lake
    from cribl_sdk_python_fafo.licenses import Licenses
    from cribl_sdk_python_fafo.logger import Logger
    from cribl_sdk_python_fafo.logging import Logging
    from cribl_sdk_python_fafo.lookups import Lookups
    from cribl_sdk_python_fafo.macros import Macros
    from cribl_sdk_python_fafo.messages import Messages
    from cribl_sdk_python_fafo.metrics import Metrics
    from cribl_sdk_python_fafo.notification_targets import NotificationTargets
    from cribl_sdk_python_fafo.notifications_sdk import NotificationsSDK
    from cribl_sdk_python_fafo.onlyonprem import OnlyOnPrem
    from cribl_sdk_python_fafo.outputs import Outputs
    from cribl_sdk_python_fafo.packs import Packs
    from cribl_sdk_python_fafo.parquetschemas import Parquetschemas
    from cribl_sdk_python_fafo.parsers import Parsers
    from cribl_sdk_python_fafo.pipelines import Pipelines
    from cribl_sdk_python_fafo.policies import Policies
    from cribl_sdk_python_fafo.preview import Preview
    from cribl_sdk_python_fafo.processes import Processes
    from cribl_sdk_python_fafo.profiler import Profiler
    from cribl_sdk_python_fafo.projects import Projects
    from cribl_sdk_python_fafo.protobuflibraries import Protobuflibraries
    from cribl_sdk_python_fafo.query import Query
    from cribl_sdk_python_fafo.regexes import Regexes
    from cribl_sdk_python_fafo.roles import Roles
    from cribl_sdk_python_fafo.routes_sdk import RoutesSDK
    from cribl_sdk_python_fafo.samples_sdk import SamplesSDK
    from cribl_sdk_python_fafo.saved_jobs import SavedJobs
    from cribl_sdk_python_fafo.savedqueries import SavedQueries
    from cribl_sdk_python_fafo.schemas import Schemas
    from cribl_sdk_python_fafo.scripts import Scripts
    from cribl_sdk_python_fafo.search import Search
    from cribl_sdk_python_fafo.secrets import Secrets
    from cribl_sdk_python_fafo.security_sdk import SecuritySDK
    from cribl_sdk_python_fafo.subscriptions import Subscriptions
    from cribl_sdk_python_fafo.system_sdk import SystemSDK
    from cribl_sdk_python_fafo.teams import Teams
    from cribl_sdk_python_fafo.teams_acl import TeamsACL
    from cribl_sdk_python_fafo.trust_policies import TrustPolicies
    from cribl_sdk_python_fafo.uistate import UIState
    from cribl_sdk_python_fafo.usage_groups import UsageGroups
    from cribl_sdk_python_fafo.users import Users
    from cribl_sdk_python_fafo.users_acl import UsersACL
    from cribl_sdk_python_fafo.versioning import Versioning
    from cribl_sdk_python_fafo.workers_sdk import WorkersSDK


class CriblSDKPythonFafo(BaseSDK):
    r"""Cribl API Reference: This API Reference lists available REST endpoints, along with their supported operations for accessing, creating, updating, or deleting resources. See our complementary product documentation at [docs.cribl.io](http://docs.cribl.io)."""

    projects: "Projects"
    r"""Actions related to Projects"""
    subscriptions: "Subscriptions"
    r"""Actions related to Subscriptions"""
    versioning: "Versioning"
    r"""Actions related to Versioning"""
    git: "GitSDK"
    r"""Actions related to Git"""
    preview: "Preview"
    r"""Actions related to data preview"""
    samples: "SamplesSDK"
    r"""Actions related to samples"""
    pipelines: "Pipelines"
    r"""Actions related to Pipelines"""
    banners: "Banners"
    r"""Actions related to Banners"""
    certificates: "Certificates"
    r"""Actions related to Certificates"""
    features: "Features"
    r"""Actions related to Features"""
    saved_jobs: "SavedJobs"
    r"""Actions related to Saved Jobs"""
    keys: "Keys"
    r"""Actions related to encryption keys"""
    messages: "Messages"
    r"""Actions related to messages"""
    notification_targets: "NotificationTargets"
    r"""Actions related to Notification Targets"""
    notifications: "NotificationsSDK"
    r"""Actions related to Notifications"""
    policies: "Policies"
    r"""Actions related to Policies"""
    roles: "Roles"
    r"""Actions related to Roles"""
    scripts: "Scripts"
    r"""Actions related to scripts"""
    teams: "Teams"
    r"""Actions related to Teams"""
    users: "Users"
    r"""Actions related to users. The <code>/system/users</code> endpoints do not apply to Cribl.Cloud deployments. Instead use <code>/products/{product}/users</code>"""
    only_on_prem: "OnlyOnPrem"
    r"""Actions only available for onprem deployments and do not apply to Cribl.Cloud deployments"""
    lake: "Lake"
    r"""Actions related to Lake"""
    dashboard_categories: "DashboardCategories"
    r"""Actions related to DashboardCategories"""
    usage_groups: "UsageGroups"
    r"""Actions related to Usage Groups"""
    datasets: "Datasets"
    r"""Actions related to Datasets"""
    users_acl: "UsersACL"
    r"""Actions related to Users ACL"""
    teams_acl: "TeamsACL"
    r"""Actions related to Teams ACL"""
    appscope_configs: "AppscopeConfigs"
    r"""Actions related to Appscope Configs"""
    grokfiles: "Grokfiles"
    r"""Actions related to Grok files"""
    lookups: "Lookups"
    r"""Actions related to lookups"""
    parsers: "Parsers"
    r"""Actions related to parsers"""
    protobuflibraries: "Protobuflibraries"
    r"""Actions related to Protobuf libraries"""
    regexes: "Regexes"
    r"""Actions related to regular expressions"""
    dashboards: "Dashboards"
    r"""Actions related to Dashboards"""
    macros: "Macros"
    r"""Actions related to Macros"""
    saved_queries: "SavedQueries"
    r"""Actions related to saved queries"""
    search: "Search"
    r"""Actions related to Search"""
    database_connections: "DatabaseConnections"
    r"""Actions related to Database Connections"""
    event_breaker_rules: "EventBreakerRules"
    r"""Actions related to Event Breaker rules"""
    global_variables: "GlobalVariables"
    r"""Actions related to Global Variables"""
    hmac_functions: "HmacFunctions"
    r"""Actions related to HMAC functions"""
    inputs: "Inputs"
    r"""Actions related to inputs"""
    iometrics: "Iometrics"
    r"""Actions related to source/destination metrics"""
    outputs: "Outputs"
    r"""Actions related to outputs"""
    parquetschemas: "Parquetschemas"
    r"""Actions related to Parquet schemas"""
    profiler: "Profiler"
    r"""Actions related to Profiler"""
    routes: "RoutesSDK"
    r"""Actions related to Routes"""
    schemas: "Schemas"
    r"""Actions related to Schemas"""
    secrets: "Secrets"
    r"""Actions related to Secrets"""
    edge_app_scope_processes: "EdgeAppScopeProcesses"
    r"""Actions related to Edge AppScope processes"""
    edge: "Edge"
    r"""Actions enabled in Edge"""
    edge_events: "EdgeEvents"
    r"""Actions related to EdgeEvents"""
    events: "Events"
    r"""Actions related to Events"""
    edge_files: "EdgeFiles"
    r"""Actions related to Edge Files"""
    edge_ls: "EdgeLs"
    r"""Actions related to Edge listing"""
    file: "FileSDK"
    r"""Actions related to File"""
    ingest: "Ingest"
    r"""Actions related to Ingest"""
    file_sampler: "FileSampler"
    r"""Actions related to FileSampler"""
    kube_logs: "KubeLogs"
    r"""Actions related to Kube Logs"""
    kube_proxy: "KubeProxy"
    r"""Actions related to Kube Proxy"""
    auth: "AuthSDK"
    r"""Actions related to authentication. Do not use the /auth endpoints in Cribl.Cloud deployments. Instead, follow the instructions at https://docs.cribl.io/stream/api-tutorials/#criblcloud to authenticate for Cribl.Cloud."""
    authorize: "Authorize"
    r"""Actions related to Authorize"""
    changelog: "Changelog"
    r"""Actions related to Changelog"""
    system: "SystemSDK"
    r"""Actions related to system settings"""
    click_house: "ClickHouse"
    r"""Actions related to ClickHouse"""
    clui: "Clui"
    r"""Actions related to CLUI"""
    distributed: "DistributedSDK"
    r"""Actions related to Distributed"""
    workers: "WorkersSDK"
    r"""Actions related to Workers"""
    expressions: "Expressions"
    r"""Actions related to expressions"""
    conditions: "Conditions"
    r"""Actions related to Conditions"""
    diag: "DiagSDK"
    r"""Actions related to diagnostics"""
    health: "HealthSDK"
    r"""Actions related to REST server health"""
    jobs: "Jobs"
    r"""Actions related to Jobs"""
    security: "SecuritySDK"
    r"""Actions related to Security"""
    licenses: "Licenses"
    r"""Actions related to licenses. The <code>/licenses</code> endpoints do not apply to Cribl.Cloud deployments."""
    logger: "Logger"
    r"""Actions related to Logger"""
    logging: "Logging"
    r"""Actions related to logging"""
    packs: "Packs"
    r"""Actions related to Packs"""
    processes: "Processes"
    r"""Actions related to Processes"""
    metrics: "Metrics"
    r"""Actions related to metrics"""
    ui_state: "UIState"
    r"""Actions related to UiState"""
    ai_settings: "AiSettings"
    r"""Actions related to Ai Settings"""
    consent: "Consent"
    r"""Actions related to Consent"""
    query: "Query"
    r"""Actions related to Query"""
    trust_policies: "TrustPolicies"
    r"""Actions related to Trust Policies"""
    edge_containers: "EdgeContainers"
    r"""Actions related to Edge containers"""
    edge_processes: "EdgeProcesses"
    r"""Actions related to Edge processes"""
    functions: "Functions"
    r"""Actions related to functions"""
    collectors: "CollectorsSDK"
    r"""Actions related to Collectors"""
    executors: "Executors"
    r"""Actions related to Executors"""
    groups: "GroupsSDK"
    r"""Actions related to Groups"""
    _sub_sdk_map = {
        "projects": ("cribl_sdk_python_fafo.projects", "Projects"),
        "subscriptions": ("cribl_sdk_python_fafo.subscriptions", "Subscriptions"),
        "versioning": ("cribl_sdk_python_fafo.versioning", "Versioning"),
        "git": ("cribl_sdk_python_fafo.git_sdk", "GitSDK"),
        "preview": ("cribl_sdk_python_fafo.preview", "Preview"),
        "samples": ("cribl_sdk_python_fafo.samples_sdk", "SamplesSDK"),
        "pipelines": ("cribl_sdk_python_fafo.pipelines", "Pipelines"),
        "banners": ("cribl_sdk_python_fafo.banners", "Banners"),
        "certificates": ("cribl_sdk_python_fafo.certificates", "Certificates"),
        "features": ("cribl_sdk_python_fafo.features", "Features"),
        "saved_jobs": ("cribl_sdk_python_fafo.saved_jobs", "SavedJobs"),
        "keys": ("cribl_sdk_python_fafo.keys", "Keys"),
        "messages": ("cribl_sdk_python_fafo.messages", "Messages"),
        "notification_targets": (
            "cribl_sdk_python_fafo.notification_targets",
            "NotificationTargets",
        ),
        "notifications": (
            "cribl_sdk_python_fafo.notifications_sdk",
            "NotificationsSDK",
        ),
        "policies": ("cribl_sdk_python_fafo.policies", "Policies"),
        "roles": ("cribl_sdk_python_fafo.roles", "Roles"),
        "scripts": ("cribl_sdk_python_fafo.scripts", "Scripts"),
        "teams": ("cribl_sdk_python_fafo.teams", "Teams"),
        "users": ("cribl_sdk_python_fafo.users", "Users"),
        "only_on_prem": ("cribl_sdk_python_fafo.onlyonprem", "OnlyOnPrem"),
        "lake": ("cribl_sdk_python_fafo.lake", "Lake"),
        "dashboard_categories": (
            "cribl_sdk_python_fafo.dashboardcategories",
            "DashboardCategories",
        ),
        "usage_groups": ("cribl_sdk_python_fafo.usage_groups", "UsageGroups"),
        "datasets": ("cribl_sdk_python_fafo.datasets", "Datasets"),
        "users_acl": ("cribl_sdk_python_fafo.users_acl", "UsersACL"),
        "teams_acl": ("cribl_sdk_python_fafo.teams_acl", "TeamsACL"),
        "appscope_configs": (
            "cribl_sdk_python_fafo.appscope_configs",
            "AppscopeConfigs",
        ),
        "grokfiles": ("cribl_sdk_python_fafo.grokfiles", "Grokfiles"),
        "lookups": ("cribl_sdk_python_fafo.lookups", "Lookups"),
        "parsers": ("cribl_sdk_python_fafo.parsers", "Parsers"),
        "protobuflibraries": (
            "cribl_sdk_python_fafo.protobuflibraries",
            "Protobuflibraries",
        ),
        "regexes": ("cribl_sdk_python_fafo.regexes", "Regexes"),
        "dashboards": ("cribl_sdk_python_fafo.dashboards", "Dashboards"),
        "macros": ("cribl_sdk_python_fafo.macros", "Macros"),
        "saved_queries": ("cribl_sdk_python_fafo.savedqueries", "SavedQueries"),
        "search": ("cribl_sdk_python_fafo.search", "Search"),
        "database_connections": (
            "cribl_sdk_python_fafo.database_connections",
            "DatabaseConnections",
        ),
        "event_breaker_rules": (
            "cribl_sdk_python_fafo.event_breaker_rules",
            "EventBreakerRules",
        ),
        "global_variables": (
            "cribl_sdk_python_fafo.global_variables",
            "GlobalVariables",
        ),
        "hmac_functions": ("cribl_sdk_python_fafo.hmac_functions", "HmacFunctions"),
        "inputs": ("cribl_sdk_python_fafo.inputs", "Inputs"),
        "iometrics": ("cribl_sdk_python_fafo.iometrics", "Iometrics"),
        "outputs": ("cribl_sdk_python_fafo.outputs", "Outputs"),
        "parquetschemas": ("cribl_sdk_python_fafo.parquetschemas", "Parquetschemas"),
        "profiler": ("cribl_sdk_python_fafo.profiler", "Profiler"),
        "routes": ("cribl_sdk_python_fafo.routes_sdk", "RoutesSDK"),
        "schemas": ("cribl_sdk_python_fafo.schemas", "Schemas"),
        "secrets": ("cribl_sdk_python_fafo.secrets", "Secrets"),
        "edge_app_scope_processes": (
            "cribl_sdk_python_fafo.edgeappscopeprocesses",
            "EdgeAppScopeProcesses",
        ),
        "edge": ("cribl_sdk_python_fafo.edge", "Edge"),
        "edge_events": ("cribl_sdk_python_fafo.edgeevents", "EdgeEvents"),
        "events": ("cribl_sdk_python_fafo.events", "Events"),
        "edge_files": ("cribl_sdk_python_fafo.edgefiles", "EdgeFiles"),
        "edge_ls": ("cribl_sdk_python_fafo.edgels", "EdgeLs"),
        "file": ("cribl_sdk_python_fafo.file_sdk", "FileSDK"),
        "ingest": ("cribl_sdk_python_fafo.ingest", "Ingest"),
        "file_sampler": ("cribl_sdk_python_fafo.filesampler", "FileSampler"),
        "kube_logs": ("cribl_sdk_python_fafo.kube_logs", "KubeLogs"),
        "kube_proxy": ("cribl_sdk_python_fafo.kube_proxy", "KubeProxy"),
        "auth": ("cribl_sdk_python_fafo.auth_sdk", "AuthSDK"),
        "authorize": ("cribl_sdk_python_fafo.authorize", "Authorize"),
        "changelog": ("cribl_sdk_python_fafo.changelog", "Changelog"),
        "system": ("cribl_sdk_python_fafo.system_sdk", "SystemSDK"),
        "click_house": ("cribl_sdk_python_fafo.click_house", "ClickHouse"),
        "clui": ("cribl_sdk_python_fafo.clui", "Clui"),
        "distributed": ("cribl_sdk_python_fafo.distributed_sdk", "DistributedSDK"),
        "workers": ("cribl_sdk_python_fafo.workers_sdk", "WorkersSDK"),
        "expressions": ("cribl_sdk_python_fafo.expressions", "Expressions"),
        "conditions": ("cribl_sdk_python_fafo.conditions", "Conditions"),
        "diag": ("cribl_sdk_python_fafo.diag_sdk", "DiagSDK"),
        "health": ("cribl_sdk_python_fafo.health_sdk", "HealthSDK"),
        "jobs": ("cribl_sdk_python_fafo.jobs", "Jobs"),
        "security": ("cribl_sdk_python_fafo.security_sdk", "SecuritySDK"),
        "licenses": ("cribl_sdk_python_fafo.licenses", "Licenses"),
        "logger": ("cribl_sdk_python_fafo.logger", "Logger"),
        "logging": ("cribl_sdk_python_fafo.logging", "Logging"),
        "packs": ("cribl_sdk_python_fafo.packs", "Packs"),
        "processes": ("cribl_sdk_python_fafo.processes", "Processes"),
        "metrics": ("cribl_sdk_python_fafo.metrics", "Metrics"),
        "ui_state": ("cribl_sdk_python_fafo.uistate", "UIState"),
        "ai_settings": ("cribl_sdk_python_fafo.ai_settings", "AiSettings"),
        "consent": ("cribl_sdk_python_fafo.consent", "Consent"),
        "query": ("cribl_sdk_python_fafo.query", "Query"),
        "trust_policies": ("cribl_sdk_python_fafo.trust_policies", "TrustPolicies"),
        "edge_containers": ("cribl_sdk_python_fafo.edgecontainers", "EdgeContainers"),
        "edge_processes": ("cribl_sdk_python_fafo.edgeprocesses", "EdgeProcesses"),
        "functions": ("cribl_sdk_python_fafo.functions", "Functions"),
        "collectors": ("cribl_sdk_python_fafo.collectors_sdk", "CollectorsSDK"),
        "executors": ("cribl_sdk_python_fafo.executors", "Executors"),
        "groups": ("cribl_sdk_python_fafo.groups_sdk", "GroupsSDK"),
    }

    def __init__(
        self,
        server_url: str,
        security: Optional[
            Union[models.Security, Callable[[], models.Security]]
        ] = None,
        client: Optional[HttpClient] = None,
        async_client: Optional[AsyncHttpClient] = None,
        retry_config: OptionalNullable[RetryConfig] = UNSET,
        timeout_ms: Optional[int] = None,
        debug_logger: Optional[Logger] = None,
    ) -> None:
        r"""Instantiates the SDK configuring it with the provided parameters.

        :param security: The security details required for authentication
        :param server_idx: The index of the server to use for all methods
        :param server_url: The server URL to use for all methods
        :param url_params: Parameters to optionally template the server URL with
        :param client: The HTTP client to use for all synchronous methods
        :param async_client: The Async HTTP client to use for all asynchronous methods
        :param retry_config: The retry configuration to use for all supported methods
        :param timeout_ms: Optional request timeout applied to each operation in milliseconds
        """
        client_supplied = True
        if client is None:
            client = httpx.Client()
            client_supplied = False

        assert issubclass(
            type(client), HttpClient
        ), "The provided client must implement the HttpClient protocol."

        async_client_supplied = True
        if async_client is None:
            async_client = httpx.AsyncClient()
            async_client_supplied = False

        if debug_logger is None:
            debug_logger = get_default_logger()

        assert issubclass(
            type(async_client), AsyncHttpClient
        ), "The provided async_client must implement the AsyncHttpClient protocol."

        BaseSDK.__init__(
            self,
            SDKConfiguration(
                client=client,
                client_supplied=client_supplied,
                async_client=async_client,
                async_client_supplied=async_client_supplied,
                security=security,
                server_url=server_url,
                retry_config=retry_config,
                timeout_ms=timeout_ms,
                debug_logger=debug_logger,
            ),
        )

        hooks = SDKHooks()

        # pylint: disable=protected-access
        self.sdk_configuration.__dict__["_hooks"] = hooks

        self.sdk_configuration = hooks.sdk_init(self.sdk_configuration)

        weakref.finalize(
            self,
            close_clients,
            cast(ClientOwner, self.sdk_configuration),
            self.sdk_configuration.client,
            self.sdk_configuration.client_supplied,
            self.sdk_configuration.async_client,
            self.sdk_configuration.async_client_supplied,
        )

    def __getattr__(self, name: str):
        if name in self._sub_sdk_map:
            module_path, class_name = self._sub_sdk_map[name]
            try:
                module = importlib.import_module(module_path)
                klass = getattr(module, class_name)
                instance = klass(self.sdk_configuration)
                setattr(self, name, instance)
                return instance
            except ImportError as e:
                raise AttributeError(
                    f"Failed to import module {module_path} for attribute {name}: {e}"
                ) from e
            except AttributeError as e:
                raise AttributeError(
                    f"Failed to find class {class_name} in module {module_path} for attribute {name}: {e}"
                ) from e

        raise AttributeError(
            f"'{type(self).__name__}' object has no attribute '{name}'"
        )

    def __dir__(self):
        default_attrs = list(super().__dir__())
        lazy_attrs = list(self._sub_sdk_map.keys())
        return sorted(list(set(default_attrs + lazy_attrs)))

    def __enter__(self):
        return self

    async def __aenter__(self):
        return self

    def __exit__(self, exc_type, exc_val, exc_tb):
        if (
            self.sdk_configuration.client is not None
            and not self.sdk_configuration.client_supplied
        ):
            self.sdk_configuration.client.close()
        self.sdk_configuration.client = None

    async def __aexit__(self, exc_type, exc_val, exc_tb):
        if (
            self.sdk_configuration.async_client is not None
            and not self.sdk_configuration.async_client_supplied
        ):
            await self.sdk_configuration.async_client.aclose()
        self.sdk_configuration.async_client = None
