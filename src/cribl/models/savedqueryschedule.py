"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .notification import Notification, NotificationTypedDict
from cribl.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class NotificationsModelTypedDict(TypedDict):
    disabled: bool
    items: NotRequired[List[NotificationTypedDict]]


class NotificationsModel(BaseModel):
    disabled: bool

    items: Optional[List[Notification]] = None


class SavedQueryScheduleTypedDict(TypedDict):
    cron_schedule: str
    enabled: bool
    keep_last_n: float
    notifications: NotificationsModelTypedDict
    tz: str
    resume_missed: NotRequired[bool]
    resume_on_boot: NotRequired[bool]


class SavedQuerySchedule(BaseModel):
    cron_schedule: Annotated[str, pydantic.Field(alias="cronSchedule")]

    enabled: bool

    keep_last_n: Annotated[float, pydantic.Field(alias="keepLastN")]

    notifications: NotificationsModel

    tz: str

    resume_missed: Annotated[Optional[bool], pydantic.Field(alias="resumeMissed")] = (
        None
    )

    resume_on_boot: Annotated[Optional[bool], pydantic.Field(alias="resumeOnBoot")] = (
        None
    )
