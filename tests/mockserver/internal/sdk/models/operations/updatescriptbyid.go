// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type UpdateScriptByIDRequest struct {
	// Unique ID to PATCH
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Script object to be updated
	ScriptLibEntry components.ScriptLibEntry `request:"mediaType=application/json"`
}

func (o *UpdateScriptByIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *UpdateScriptByIDRequest) GetScriptLibEntry() components.ScriptLibEntry {
	if o == nil {
		return components.ScriptLibEntry{}
	}
	return o.ScriptLibEntry
}

// UpdateScriptByIDResponseBody - a list of Script objects
type UpdateScriptByIDResponseBody struct {
	// number of items present in the items array
	Count *int64                      `json:"count,omitempty"`
	Items []components.ScriptLibEntry `json:"items,omitempty"`
}

func (o *UpdateScriptByIDResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *UpdateScriptByIDResponseBody) GetItems() []components.ScriptLibEntry {
	if o == nil {
		return nil
	}
	return o.Items
}

type UpdateScriptByIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of Script objects
	Object *UpdateScriptByIDResponseBody
}

func (o *UpdateScriptByIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UpdateScriptByIDResponse) GetObject() *UpdateScriptByIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
