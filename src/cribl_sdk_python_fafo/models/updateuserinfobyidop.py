"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .user import User, UserTypedDict
from .userinfo import UserInfo, UserInfoTypedDict
from cribl_sdk_python_fafo.types import BaseModel
from cribl_sdk_python_fafo.utils import (
    FieldMetadata,
    PathParamMetadata,
    RequestMetadata,
)
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class UpdateUserInfoByIDRequestTypedDict(TypedDict):
    id_param: str
    r"""User Id"""
    user_info: UserInfoTypedDict
    r"""UserInfo object"""


class UpdateUserInfoByIDRequest(BaseModel):
    id_param: Annotated[
        str,
        pydantic.Field(alias="id"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""User Id"""

    user_info: Annotated[
        UserInfo, FieldMetadata(request=RequestMetadata(media_type="application/json"))
    ]
    r"""UserInfo object"""


class UpdateUserInfoByIDResponseTypedDict(TypedDict):
    r"""a list of User objects"""

    count: NotRequired[int]
    r"""number of items present in the items array"""
    items: NotRequired[List[UserTypedDict]]


class UpdateUserInfoByIDResponse(BaseModel):
    r"""a list of User objects"""

    count: Optional[int] = None
    r"""number of items present in the items array"""

    items: Optional[List[User]] = None
