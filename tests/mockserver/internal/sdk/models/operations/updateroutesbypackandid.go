// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type UpdateRoutesByPackAndIDRequest struct {
	// Unique ID to PATCH for pack
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// pack ID to PATCH
	Pack string `pathParam:"style=simple,explode=false,name=pack"`
	// Routes object to be updated
	Routes components.RoutesInput `request:"mediaType=application/json"`
}

func (o *UpdateRoutesByPackAndIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *UpdateRoutesByPackAndIDRequest) GetPack() string {
	if o == nil {
		return ""
	}
	return o.Pack
}

func (o *UpdateRoutesByPackAndIDRequest) GetRoutes() components.RoutesInput {
	if o == nil {
		return components.RoutesInput{}
	}
	return o.Routes
}

// UpdateRoutesByPackAndIDResponseBody - a list of Routes objects
type UpdateRoutesByPackAndIDResponseBody struct {
	// number of items present in the items array
	Count *int64              `json:"count,omitempty"`
	Items []components.Routes `json:"items,omitempty"`
}

func (o *UpdateRoutesByPackAndIDResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *UpdateRoutesByPackAndIDResponseBody) GetItems() []components.Routes {
	if o == nil {
		return nil
	}
	return o.Items
}

type UpdateRoutesByPackAndIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of Routes objects
	Object *UpdateRoutesByPackAndIDResponseBody
}

func (o *UpdateRoutesByPackAndIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UpdateRoutesByPackAndIDResponse) GetObject() *UpdateRoutesByPackAndIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
