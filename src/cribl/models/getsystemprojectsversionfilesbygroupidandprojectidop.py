"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .gitfilesresponse import GitFilesResponse, GitFilesResponseTypedDict
from cribl.types import BaseModel
from cribl.utils import FieldMetadata, PathParamMetadata
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetSystemProjectsVersionFilesByGroupIDAndProjectIDRequestTypedDict(TypedDict):
    group_id: str
    r"""Group Id"""
    project_id: str
    r"""Project Id"""


class GetSystemProjectsVersionFilesByGroupIDAndProjectIDRequest(BaseModel):
    group_id: Annotated[
        str,
        pydantic.Field(alias="groupId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Group Id"""

    project_id: Annotated[
        str,
        pydantic.Field(alias="projectId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Project Id"""


class GetSystemProjectsVersionFilesByGroupIDAndProjectIDResponseBodyTypedDict(
    TypedDict
):
    r"""A list of GitFilesResponse objects"""

    count: NotRequired[int]
    r"""Number of items present in the items array"""
    items: NotRequired[List[GitFilesResponseTypedDict]]


class GetSystemProjectsVersionFilesByGroupIDAndProjectIDResponseBody(BaseModel):
    r"""A list of GitFilesResponse objects"""

    count: Optional[int] = None
    r"""Number of items present in the items array"""

    items: Optional[List[GitFilesResponse]] = None
