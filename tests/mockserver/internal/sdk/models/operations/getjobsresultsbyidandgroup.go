// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type GetJobsResultsByIDAndGroupRequest struct {
	// Instance id of the job to get results for
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Maximum files to get job results
	MaxFiles *float64 `queryParam:"style=form,explode=true,name=maxFiles"`
	// Group the job belongs to
	Group string `pathParam:"style=simple,explode=false,name=group"`
}

func (o *GetJobsResultsByIDAndGroupRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetJobsResultsByIDAndGroupRequest) GetMaxFiles() *float64 {
	if o == nil {
		return nil
	}
	return o.MaxFiles
}

func (o *GetJobsResultsByIDAndGroupRequest) GetGroup() string {
	if o == nil {
		return ""
	}
	return o.Group
}

// GetJobsResultsByIDAndGroupResponseBody - a list of any objects
type GetJobsResultsByIDAndGroupResponseBody struct {
	// number of items present in the items array
	Count *int64           `json:"count,omitempty"`
	Items []map[string]any `json:"items,omitempty"`
}

func (o *GetJobsResultsByIDAndGroupResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *GetJobsResultsByIDAndGroupResponseBody) GetItems() []map[string]any {
	if o == nil {
		return nil
	}
	return o.Items
}

type GetJobsResultsByIDAndGroupResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of any objects
	Object *GetJobsResultsByIDAndGroupResponseBody
}

func (o *GetJobsResultsByIDAndGroupResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetJobsResultsByIDAndGroupResponse) GetObject() *GetJobsResultsByIDAndGroupResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
