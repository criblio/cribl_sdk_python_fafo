"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .resourcepolicy import ResourcePolicy, ResourcePolicyTypedDict
from cribl_sdk_python_fafo.types import BaseModel
from cribl_sdk_python_fafo.utils import (
    FieldMetadata,
    PathParamMetadata,
    QueryParamMetadata,
)
from enum import Enum
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetProductsUsersACLByProductAndIDProduct(str, Enum):
    r"""product by which to filter members"""

    STREAM = "stream"
    EDGE = "edge"
    SEARCH = "search"
    LAKE = "lake"


class GetProductsUsersACLByProductAndIDType(str, Enum):
    r"""resource type by which to filter access levels"""

    GROUPS = "groups"
    DATASETS = "datasets"
    DATASET_PROVIDERS = "dataset-providers"
    PROJECTS = "projects"
    DASHBOARDS = "dashboards"
    MACROS = "macros"


class GetProductsUsersACLByProductAndIDRequestTypedDict(TypedDict):
    product: GetProductsUsersACLByProductAndIDProduct
    r"""product by which to filter members"""
    id: str
    r"""user id"""
    type: NotRequired[GetProductsUsersACLByProductAndIDType]
    r"""resource type by which to filter access levels"""


class GetProductsUsersACLByProductAndIDRequest(BaseModel):
    product: Annotated[
        GetProductsUsersACLByProductAndIDProduct,
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""product by which to filter members"""

    id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""user id"""

    type: Annotated[
        Optional[GetProductsUsersACLByProductAndIDType],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""resource type by which to filter access levels"""


class GetProductsUsersACLByProductAndIDResponseTypedDict(TypedDict):
    r"""a list of ResourcePolicy objects"""

    count: NotRequired[int]
    r"""number of items present in the items array"""
    items: NotRequired[List[ResourcePolicyTypedDict]]


class GetProductsUsersACLByProductAndIDResponse(BaseModel):
    r"""a list of ResourcePolicy objects"""

    count: Optional[int] = None
    r"""number of items present in the items array"""

    items: Optional[List[ResourcePolicy]] = None
