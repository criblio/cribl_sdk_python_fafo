// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type GetGroupsByIDRequest struct {
	// Group id
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// fields to add to results: git.commit, git.localChanges, git.log
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
}

func (o *GetGroupsByIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetGroupsByIDRequest) GetFields() *string {
	if o == nil {
		return nil
	}
	return o.Fields
}

// GetGroupsByIDResponseBody - a list of ConfigGroup objects
type GetGroupsByIDResponseBody struct {
	// number of items present in the items array
	Count *int64                   `json:"count,omitempty"`
	Items []components.ConfigGroup `json:"items,omitempty"`
}

func (o *GetGroupsByIDResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *GetGroupsByIDResponseBody) GetItems() []components.ConfigGroup {
	if o == nil {
		return nil
	}
	return o.Items
}

type GetGroupsByIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of ConfigGroup objects
	Object *GetGroupsByIDResponseBody
}

func (o *GetGroupsByIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetGroupsByIDResponse) GetObject() *GetGroupsByIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
