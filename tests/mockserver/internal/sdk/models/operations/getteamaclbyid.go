// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"mockserver/internal/sdk/models/components"
)

// GetTeamACLByIDType - resource type by which to filter access levels
type GetTeamACLByIDType string

const (
	GetTeamACLByIDTypeGroups           GetTeamACLByIDType = "groups"
	GetTeamACLByIDTypeDatasets         GetTeamACLByIDType = "datasets"
	GetTeamACLByIDTypeDatasetProviders GetTeamACLByIDType = "dataset-providers"
	GetTeamACLByIDTypeProjects         GetTeamACLByIDType = "projects"
	GetTeamACLByIDTypeDashboards       GetTeamACLByIDType = "dashboards"
	GetTeamACLByIDTypeMacros           GetTeamACLByIDType = "macros"
)

func (e GetTeamACLByIDType) ToPointer() *GetTeamACLByIDType {
	return &e
}
func (e *GetTeamACLByIDType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "groups":
		fallthrough
	case "datasets":
		fallthrough
	case "dataset-providers":
		fallthrough
	case "projects":
		fallthrough
	case "dashboards":
		fallthrough
	case "macros":
		*e = GetTeamACLByIDType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetTeamACLByIDType: %v", v)
	}
}

type GetTeamACLByIDRequest struct {
	// Team name
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// resource type by which to filter access levels
	Type *GetTeamACLByIDType `queryParam:"style=form,explode=true,name=type"`
}

func (o *GetTeamACLByIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetTeamACLByIDRequest) GetType() *GetTeamACLByIDType {
	if o == nil {
		return nil
	}
	return o.Type
}

// GetTeamACLByIDResponseBody - a list of ResourcePolicy objects
type GetTeamACLByIDResponseBody struct {
	// number of items present in the items array
	Count *int64                      `json:"count,omitempty"`
	Items []components.ResourcePolicy `json:"items,omitempty"`
}

func (o *GetTeamACLByIDResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *GetTeamACLByIDResponseBody) GetItems() []components.ResourcePolicy {
	if o == nil {
		return nil
	}
	return o.Items
}

type GetTeamACLByIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of ResourcePolicy objects
	Object *GetTeamACLByIDResponseBody
}

func (o *GetTeamACLByIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetTeamACLByIDResponse) GetObject() *GetTeamACLByIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
