"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .searchjobresults import SearchJobResults, SearchJobResultsTypedDict
from cribl_sdk_python_fafo.types import BaseModel
from cribl_sdk_python_fafo.utils import (
    FieldMetadata,
    PathParamMetadata,
    QueryParamMetadata,
)
import pydantic
from typing import Optional, Union
from typing_extensions import Annotated, NotRequired, TypeAliasType, TypedDict


class GetSearchJobsResultsByIDRequestTypedDict(TypedDict):
    id: str
    r"""search job id"""
    limit: NotRequired[float]
    r"""maximum number of events returned"""
    offset: NotRequired[float]
    r"""starting offset of the events"""
    lower_bound: NotRequired[float]
    r"""lower bound of the time range, inclusive"""
    upper_bound: NotRequired[float]
    r"""upper bound of the time range, exclusive"""


class GetSearchJobsResultsByIDRequest(BaseModel):
    id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""search job id"""

    limit: Annotated[
        Optional[float],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""maximum number of events returned"""

    offset: Annotated[
        Optional[float],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""starting offset of the events"""

    lower_bound: Annotated[
        Optional[float],
        pydantic.Field(alias="lowerBound"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""lower bound of the time range, inclusive"""

    upper_bound: Annotated[
        Optional[float],
        pydantic.Field(alias="upperBound"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""upper bound of the time range, exclusive"""


class ResponseBodyTypedDict(TypedDict):
    dataset: NotRequired[str]


class ResponseBody(BaseModel):
    dataset: Optional[str] = None


GetSearchJobsResultsByIDResponseBodyTypedDict = TypeAliasType(
    "GetSearchJobsResultsByIDResponseBodyTypedDict",
    Union[ResponseBodyTypedDict, SearchJobResultsTypedDict],
)
r"""SearchResultsResults for the Search /results and /results-poll endpoints. object"""


GetSearchJobsResultsByIDResponseBody = TypeAliasType(
    "GetSearchJobsResultsByIDResponseBody", Union[ResponseBody, SearchJobResults]
)
r"""SearchResultsResults for the Search /results and /results-poll endpoints. object"""
