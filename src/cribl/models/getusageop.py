"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .metrictype import MetricType
from cribl.types import BaseModel
from cribl.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
import pydantic
from typing_extensions import Annotated, TypedDict


GET_USAGE_OP_SERVERS = [
    "https://api.cribl-staging.cloud",
]


class GetUsageRequestTypedDict(TypedDict):
    organization_id: str
    metric_type: MetricType
    starting_on: str
    ending_before: str


class GetUsageRequest(BaseModel):
    organization_id: Annotated[
        str,
        pydantic.Field(alias="organizationId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]

    metric_type: Annotated[
        MetricType,
        pydantic.Field(alias="metricType"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]

    starting_on: Annotated[
        str,
        pydantic.Field(alias="startingOn"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ]

    ending_before: Annotated[
        str,
        pydantic.Field(alias="endingBefore"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ]
