// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type CreateRoutesAppendByPackAndIDRequest struct {
	// the route table to be appended to - currently default is the only supported value for pack
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// pack ID to POST
	Pack string `pathParam:"style=simple,explode=false,name=pack"`
	// RouteDefinitions object
	RequestBody []components.RouteConf `request:"mediaType=application/json"`
}

func (o *CreateRoutesAppendByPackAndIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *CreateRoutesAppendByPackAndIDRequest) GetPack() string {
	if o == nil {
		return ""
	}
	return o.Pack
}

func (o *CreateRoutesAppendByPackAndIDRequest) GetRequestBody() []components.RouteConf {
	if o == nil {
		return []components.RouteConf{}
	}
	return o.RequestBody
}

// CreateRoutesAppendByPackAndIDResponseBody - a list of any objects
type CreateRoutesAppendByPackAndIDResponseBody struct {
	// number of items present in the items array
	Count *int64           `json:"count,omitempty"`
	Items []map[string]any `json:"items,omitempty"`
}

func (o *CreateRoutesAppendByPackAndIDResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *CreateRoutesAppendByPackAndIDResponseBody) GetItems() []map[string]any {
	if o == nil {
		return nil
	}
	return o.Items
}

type CreateRoutesAppendByPackAndIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// a list of any objects
	Object *CreateRoutesAppendByPackAndIDResponseBody
}

func (o *CreateRoutesAppendByPackAndIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateRoutesAppendByPackAndIDResponse) GetObject() *CreateRoutesAppendByPackAndIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
